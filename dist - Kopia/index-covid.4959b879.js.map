{"version":3,"sources":["../js/config.js","../js/getData.js","../js/dashboard.js","../js/index-covid.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","format","n","dashboard","jsonData","jsonDataId","today","byDate","length","yesterday","increment","Math","floor","toFixed","console","log","window","err","dataJson","alert","document","getElementById","innerHTML","lastdatePositivos","Date","r0ByDate","date","formattedlastdatePositivos","getDate","getMonth","getFullYear","lastdateFallecidos","deceasedCountByDate","formattedLastdateFallecidos","lastdateR0","formattedlastdateR0","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","element","addRow","r0","options","legend","position","hAxis","colors","width","height","chart","Line","draw","convertOptions","positiveCount","deceasedCount"],"mappings":";;AGAA;;AACA;;AHDA,AGEA,MHFMA,WAAW,GAAG,gGAApB;AAEO,ACFA,IAAIS,EDEER,KCFK,GAAG,CDEC,GAAG,MCFMS,GAAV,EAAeC,QAAf,EAAyB;ADG1CT,AEHJ,ADCI,AEGJiC,EHDIjC,ICFIU,AEGF,CAACI,EFHI,GAAG,CEGd,GHDkB,ACFAH,AEGF,EHDK,GAAEb,OGCK,EFHd,EDEqB,ACF/B,+BDCqB;AAErBG,ACFAS,AEIA,EHFAT,ACFAS,GDEG,ACFA,CAACE,CDEE,GAAEd,ACFR,CAAS,KAAT,EAAgBU,GDEI,ACFpB,EAAqB,CEIbT,GFJR,aDAqB,EGIHC,cAAlB,EAAkC,UAAUkC,GAAV,EAAeC,QAAf,EAAyB;AHD3DjC,AEJJ,ADEIQ,AEII,EHFJR,ACFAQ,GAAG,CAACG,EEIIqB,CDNHhB,ECMM,IDNf,ACMmB,CDNHC,CAAhB,CDEI,CCFe,ACMX,EHFe,ACFA,AEIE,EHFC,GAAErB,CCFxB,UDEoC,mCAHf;AAIrBK,AEJA,ACMQiC,EHFRjC,IGEQiC,CHFH,EAAG,AEJD,CAACjB,CAAC,ACMI,CHFHrB,AGEI,GDND,CAAL,GAAS,GAAT,CFIc,EEJC,EAAhB,IAAsBqB,CAA7B,OCMyCe,GAA5B,CAAL,CHNa;AAKrB9B,AEJH,ADCGM,AEKK,EHFLN,ACHAM,GAAG,AEGC,CFHAI,KEKO,CFLX,EDGY,CCHC,CDGE,GAAEhB,QCHQ,GDGI,4BALR;AAMrBO,ACHI,AEKIgC,EHFRhC,IGEQgC,EFLAtB,MAAM,AEKE,CAACuB,CHFH,CCHG5B,CDGA,ECHG,CDGDZ,ACHEiB,MAAjB,EEKI,CAAwB,EHFD,KGEvB,EAAiCwB,SAAjC,GAA6C,WHRhC,eGQ0CJ,QAAV,EAAoB,cAApB,CAA7C;AHDR7B,AELJ,ACOY+B,EHFR/B,IGEQ+B,GDPHjB,GFKK,EAAG,AGEG,CAACkB,EHFFxC,CELnB,CAAmBuB,QAAnB,CFK+B,CELFC,ACOjB,CAAwB,SDPpC,EAAyC,GCO7B,EAAwCiB,SAAxC,GAAoD,0BAAUJ,QAAV,EAAoB,mBAApB,CAApD;AHTa,AEGrB,ADCI,AEMIE,CHVL,KEGCd,ACOIc,EFNAtB,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","file":"index-covid.4959b879.js","sourceRoot":"..\\src\\covid19\\es","sourcesContent":["const DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\n\nexport const DATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n","export var getJSON = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { getJSON } from './getData.js';\r\nfunction format(n) {\r\n    return (n >= 0 ? '+' : '') + n;\r\n}\r\nfunction dashboard(jsonData, jsonDataId) {\r\n    let today = jsonData.byDate[jsonData.byDate.length - 1][jsonDataId];\r\n    let yesterday = jsonData.byDate[jsonData.byDate.length - 2][jsonDataId];\r\n    let increment = (today - yesterday);\r\n    if (Math.floor(increment) !== increment) {\r\n        increment = increment.toFixed(2);\r\n    };\r\n    console.log((today) + ' (' + format(increment) + ')');\r\n    return (today) + ' (' + format(increment) + ')';\r\n}\r\nexport { format, dashboard };","import { DATAFILES } from './config';\r\nimport { getJSON } from './getData.js';\r\nimport { format, dashboard } from './dashboard.js';\r\n\r\nwindow.onload = function () {\r\n\r\n    getJSON(DATAFILES.EPIDEMICSTATUS, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            document.getElementById(\"tests\").innerHTML = dashboard(dataJson, 'pcrTestCount');\r\n            document.getElementById(\"testsRapidos\").innerHTML = dashboard(dataJson, 'serologyTestCount');\r\n            document.getElementById(\"personasUnicasPcr\").innerHTML = dashboard(dataJson, 'pcrUniquePersonCount');\r\n            document.getElementById(\"hospitalizaciones\").innerHTML = dashboard(dataJson, 'newHospitalAdmissionsWithPCRCount');\r\n            document.getElementById(\"hospitalizadosUci\").innerHTML = dashboard(dataJson, 'icuPeopleCount');\r\n            document.getElementById(\"altasHospitalarias\").innerHTML = dashboard(dataJson, 'hospitalReleasedCount');\r\n\r\n            document.getElementById(\"positivos\").innerHTML = dashboard(dataJson, 'totalPositiveCount');\r\n            let lastdatePositivos = new Date(dataJson.r0ByDate[dataJson.r0ByDate.length - 1].date);\r\n            let formattedlastdatePositivos = lastdatePositivos.getDate() + \"-\" + (lastdatePositivos.getMonth() + 1) + \"-\" + lastdatePositivos.getFullYear();\r\n            document.getElementById(\"actualizadoPositivos\").innerHTML = 'Actualizado: ' + formattedlastdatePositivos;\r\n\r\n            document.getElementById(\"fallecidos\").innerHTML = dashboard(dataJson, 'deceasedCount');\r\n            let lastdateFallecidos = new Date(dataJson.deceasedCountByDate[dataJson.deceasedCountByDate.length - 1].date);\r\n            let formattedLastdateFallecidos = lastdateFallecidos.getDate() + \"-\" + (lastdateFallecidos.getMonth() + 1) + \"-\" + lastdateFallecidos.getFullYear();\r\n            document.getElementById(\"actualizadoFallecidos\").innerHTML = 'Actualizado: ' + formattedLastdateFallecidos;\r\n\r\n            document.getElementById(\"r0\").innerHTML = dashboard(dataJson, 'r0');\r\n            let lastdateR0 = new Date(dataJson.r0ByDate[dataJson.r0ByDate.length - 1].date);\r\n            let formattedlastdateR0 = lastdateR0.getDate() + \"-\" + (lastdateR0.getMonth() + 1) + \"-\" + lastdateR0.getFullYear();\r\n            document.getElementById(\"actualizadoR0\").innerHTML = 'Actualizado: ' + formattedlastdateR0;\r\n\r\n            document.getElementById(\"hospitalizaciones\").innerHTML = dashboard(dataJson, 'newHospitalAdmissionsWithPCRCount');\r\n\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Número de Reproducción (r0)');\r\n                for (let element of dataJson.byDate) {\r\n                    if (element.date > '2020-03-07T22:00:00Z') {\r\n                        data.addRow([new Date(element.date), element.r0]);\r\n                    }\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material3'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n    getJSON(DATAFILES.PCR, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Euskadi: Número de casos positivos');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount]);\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n    getJSON(DATAFILES.DECEASEDPEOPLECOUNT, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Número de fallecidos');\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.deceasedCount]);\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material2'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}