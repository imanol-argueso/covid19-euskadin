{"version":3,"sources":["getData.js","graphs/index-covid.js"],"names":["getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","window","err","dataJson","alert","format","n","dashboard","jsonDataId","today","byDate","length","console","log","yesterday","increment","Math","floor","toFixed","document","getElementById","innerHTML","lastdatePositivos","Date","r0ByDate","date","formattedlastdatePositivos","getDate","getMonth","getFullYear","lastdateFallecidos","deceasedCountByDate","formattedLastdateFallecidos","lastdateR0","formattedlastdateR0","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","element","addRow","r0","options","legend","position","hAxis","colors","width","height","chart","Line","draw","convertOptions","positiveCount","deceasedCount"],"mappings":";;ACAA;;AACAW,MAAM,CAACJ,MAAP,GAAgB,YAAY;AAGxB,wBAAQ,4HAAR,EAAsI,UAAUK,GAAV,EAAeC,QAAf,EAAyB;AAC3J,QAAID,GAAG,IAAI,IAAX,EAAiB;ADLlB,ACMKE,IDNDd,ECMCc,KDNM,ACMD,CAAC,EDNG,UAAUb,GAAV,EAAeC,QAAf,EAAyB,ACMDU,GAA5B,CAAL;ADLR,ACMK,KAFD,CDJAT,GAAG,ECMI,CDND,IAAIC,cAAJ,EAAV;AACAD,ACMQ,EDNRA,GAAG,CAACE,IAAJ,CAAS,ICMQU,CDNjB,EAAgBd,GAAhB,ACMQ,CAAgBe,CDNH,ACMb,EAAmB,EDN3B;AACAb,ACMY,EDNZA,GAAG,CAACG,SCMe,CAACU,CAAC,CDNrB,GAAmB,ACMM,CAAL,GAAS,EDN7B,CCMoB,GAAe,EAAhB,IAAsBA,CAA7B;AACH;ADNTb,EAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AACrB,ACOI,QDPAC,MAAM,CCOGS,EDPAd,GAAG,CAACK,GCOb,CAAmBU,EDPvB,QCOI,EAA+B;AAC3B,YAAIC,KAAK,GAAGN,QAAQ,CAACO,MAAT,CAAgBP,QAAQ,CAACO,MAAT,CAAgBC,MAAhB,GAAyB,CAAzC,EAA4CH,UAA5C,CAAZ;ADPR,ACQQI,QDRJd,ACQIc,MDRE,CCQK,CAACC,EDRF,CCQN,CAAYJ,CDRpB,EAAmB,ECQX;ADPJjB,ACQI,MDRJA,MCQQsB,EDRA,CAAC,IAAD,EAAOrB,ACQE,GDRC,ACQEU,CDRDJ,OCQS,CDRpB,ACQqBW,CDR7B,KCQoB,CAAgBP,QAAQ,CAACO,MAAT,CAAgBC,MAAhB,GAAyB,CAAzC,EAA4CH,UAA5C,CAAhB;ADPP,ACQO,KDVR,MAEO,CCQKO,SAAS,GAAIN,KAAK,GAAGK,SAAzB;ADPJtB,MAAAA,QAAQ,CAACM,MAAD,CAAR;AACH,ACOO,YAAIkB,IAAI,CAACC,KAAL,CAAWF,SAAX,MAA0BA,SAA9B,EAAyC;ADNpD,ACOeA,GDdhB,OCcgBA,SAAS,GAAGA,SAAS,CAACG,OAAV,CAAkB,CAAlB,CAAZ;AACH;ADPbzB,EAAAA,GAAG,CAACO,IAAJ;AACH,ACMgB,CDnBV;ACoBSY,QAAAA,OAAO,CAACC,GAAR,CAAaJ,KAAD,GAAU,IAAV,GAAiBJ,MAAM,CAACU,SAAD,CAAvB,GAAqC,GAAjD;AACA,eAAQN,KAAD,GAAU,IAAV,GAAiBJ,MAAM,CAACU,SAAD,CAAvB,GAAqC,GAA5C;AACH;;AACDI,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6Cd,SAAS,CAAC,cAAD,CAAtD;AACAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoDd,SAAS,CAAC,mBAAD,CAA7D;AACAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyDd,SAAS,CAAC,sBAAD,CAAlE;AACAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyDd,SAAS,CAAC,mCAAD,CAAlE;AACAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyDd,SAAS,CAAC,gBAAD,CAAlE;AACAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,SAA9C,GAA0Dd,SAAS,CAAC,uBAAD,CAAnE;AAGAY,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiDd,SAAS,CAAC,oBAAD,CAA1D;AACA,UAAIe,iBAAiB,GAAG,IAAIC,IAAJ,CAASpB,QAAQ,CAACqB,QAAT,CAAkBrB,QAAQ,CAACqB,QAAT,CAAkBb,MAAlB,GAA2B,CAA7C,EAAgDc,IAAzD,CAAxB;AACA,UAAIC,0BAA0B,GAAGJ,iBAAiB,CAACK,OAAlB,KAA8B,GAA9B,IAAqCL,iBAAiB,CAACM,QAAlB,KAA+B,CAApE,IAAyE,GAAzE,GAA+EN,iBAAiB,CAACO,WAAlB,EAAhH;AACAV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDC,SAAhD,GAA4D,kBAAkBK,0BAA9E;AAEAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkDd,SAAS,CAAC,eAAD,CAA3D;AACA,UAAIuB,kBAAkB,GAAG,IAAIP,IAAJ,CAASpB,QAAQ,CAAC4B,mBAAT,CAA6B5B,QAAQ,CAAC4B,mBAAT,CAA6BpB,MAA7B,GAAsC,CAAnE,EAAsEc,IAA/E,CAAzB;AACA,UAAIO,2BAA2B,GAAGF,kBAAkB,CAACH,OAAnB,KAA+B,GAA/B,IAAsCG,kBAAkB,CAACF,QAAnB,KAAgC,CAAtE,IAA2E,GAA3E,GAAiFE,kBAAkB,CAACD,WAAnB,EAAnH;AACAV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,SAAjD,GAA6D,kBAAkBW,2BAA/E;AAEAb,MAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,GAA0Cd,SAAS,CAAC,IAAD,CAAnD;AACA,UAAI0B,UAAU,GAAG,IAAIV,IAAJ,CAASpB,QAAQ,CAACqB,QAAT,CAAkBrB,QAAQ,CAACqB,QAAT,CAAkBb,MAAlB,GAA2B,CAA7C,EAAgDc,IAAzD,CAAjB;AACA,UAAIS,mBAAmB,GAAGD,UAAU,CAACN,OAAX,KAAuB,GAAvB,IAA8BM,UAAU,CAACL,QAAX,KAAwB,CAAtD,IAA2D,GAA3D,GAAiEK,UAAU,CAACJ,WAAX,EAA3F;AACAV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,GAAqD,kBAAkBa,mBAAvE;AAEAf,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyDd,SAAS,CAAC,mCAAD,CAAlE;AAGA4B,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,MAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;;AAEA,eAASA,SAAT,GAAqB;AAEjB,YAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,EAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,6BAAzB;;AACA,aAAK,IAAIC,OAAT,IAAoBzC,QAAQ,CAACO,MAA7B,EAAqC;AACjC,cAAIkC,OAAO,CAACnB,IAAR,GAAe,sBAAnB,EAA2C;AACvCe,YAAAA,IAAI,CAACK,MAAL,CAAY,CAAC,IAAItB,IAAJ,CAASqB,OAAO,CAACnB,IAAjB,CAAD,EAAyBmB,OAAO,CAACE,EAAjC,CAAZ;AACH;AACJ;;AACD,YAAIC,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAE7C,YAAAA,MAAM,EAAE;AAAV,WAFG;AAGV8C,UAAAA,MAAM,EAAE,CAAC,SAAD,CAHE;AAIVC,UAAAA,KAAK,EAAE,GAJG;AAKVC,UAAAA,MAAM,EAAE;AALE,SAAd;AAOA,YAAIC,KAAK,GAAG,IAAInB,MAAM,CAACC,MAAP,CAAcmB,IAAlB,CAAuBpC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAvB,CAAZ;AACAkC,QAAAA,KAAK,CAACE,IAAN,CAAWhB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcmB,IAAd,CAAmBE,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;AACJ;AACJ,GArED;AAsEA,wBAAQ,gHAAR,EAA0H,UAAU7C,GAAV,EAAeC,QAAf,EAAyB;AAC/I,QAAID,GAAG,IAAI,IAAX,EAAiB;AACbE,MAAAA,KAAK,CAAC,2BAA2BF,GAA5B,CAAL;AACH,KAFD,MAEO;AACHiC,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,MAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;;AAEA,eAASA,SAAT,GAAqB;AACjB,YAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,EAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,oCAAzB;;AAEA,aAAK,IAAIC,OAAT,IAAoBzC,QAAQ,CAACO,MAA7B,EAAqC;AACjC8B,UAAAA,IAAI,CAACK,MAAL,CAAY,CAAC,IAAItB,IAAJ,CAASqB,OAAO,CAACnB,IAAjB,CAAD,EAAyBmB,OAAO,CAACc,aAAjC,CAAZ;AACH;;AACD,YAAIX,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAE7C,YAAAA,MAAM,EAAE;AAAV,WAFG;AAGV8C,UAAAA,MAAM,EAAE,CAAC,SAAD,CAHE;AAIVC,UAAAA,KAAK,EAAE,GAJG;AAKVC,UAAAA,MAAM,EAAE;AALE,SAAd;AAOA,YAAIC,KAAK,GAAG,IAAInB,MAAM,CAACC,MAAP,CAAcmB,IAAlB,CAAuBpC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAAvB,CAAZ;AACAkC,QAAAA,KAAK,CAACE,IAAN,CAAWhB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcmB,IAAd,CAAmBE,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;AACJ;AACJ,GA1BD;AA2BA,wBAAQ,gIAAR,EAA0I,UAAU7C,GAAV,EAAeC,QAAf,EAAyB;AAC/J,QAAID,GAAG,IAAI,IAAX,EAAiB;AACbE,MAAAA,KAAK,CAAC,2BAA2BF,GAA5B,CAAL;AACH,KAFD,MAEO;AACHiC,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,MAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;;AAEA,eAASA,SAAT,GAAqB;AACjB,YAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,EAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,sBAAzB;;AACA,aAAK,IAAIC,OAAT,IAAoBzC,QAAQ,CAACO,MAA7B,EAAqC;AACjC8B,UAAAA,IAAI,CAACK,MAAL,CAAY,CAAC,IAAItB,IAAJ,CAASqB,OAAO,CAACnB,IAAjB,CAAD,EAAyBmB,OAAO,CAACe,aAAjC,CAAZ;AACH;;AACD,YAAIZ,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAE7C,YAAAA,MAAM,EAAE;AAAV,WAFG;AAGV8C,UAAAA,MAAM,EAAE,CAAC,SAAD,CAHE;AAIVC,UAAAA,KAAK,EAAE,GAJG;AAKVC,UAAAA,MAAM,EAAE;AALE,SAAd;AAOA,YAAIC,KAAK,GAAG,IAAInB,MAAM,CAACC,MAAP,CAAcmB,IAAlB,CAAuBpC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAvB,CAAZ;AACAkC,QAAAA,KAAK,CAACE,IAAN,CAAWhB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcmB,IAAd,CAAmBE,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;AACJ;AACJ,GAzBD;AA0BH,CA9HD","file":"index-covid.8d27fd4d.js","sourceRoot":"..\\src\\covid19","sourcesContent":["export var getJSON = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { getJSON } from '../getData.js';\r\nwindow.onload = function () {\r\n\r\n\r\n    getJSON('https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/covid19-epidemic-status.json', function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            function format(n) {\r\n                return (n >= 0 ? '+' : '') + n;\r\n            }\r\n\r\n            function dashboard(jsonDataId) {\r\n                let today = dataJson.byDate[dataJson.byDate.length - 1][jsonDataId];\r\n                console.log(today);\r\n                let yesterday = dataJson.byDate[dataJson.byDate.length - 2][jsonDataId];\r\n                let increment = (today - yesterday);\r\n                if (Math.floor(increment) !== increment) {\r\n                    increment = increment.toFixed(2);\r\n                };\r\n                console.log((today) + ' (' + format(increment) + ')');\r\n                return (today) + ' (' + format(increment) + ')';\r\n            }\r\n            document.getElementById(\"tests\").innerHTML = dashboard('pcrTestCount');\r\n            document.getElementById(\"testsRapidos\").innerHTML = dashboard('serologyTestCount');\r\n            document.getElementById(\"personasUnicasPcr\").innerHTML = dashboard('pcrUniquePersonCount');\r\n            document.getElementById(\"hospitalizaciones\").innerHTML = dashboard('newHospitalAdmissionsWithPCRCount');\r\n            document.getElementById(\"hospitalizadosUci\").innerHTML = dashboard('icuPeopleCount');\r\n            document.getElementById(\"altasHospitalarias\").innerHTML = dashboard('hospitalReleasedCount');\r\n\r\n\r\n            document.getElementById(\"positivos\").innerHTML = dashboard('totalPositiveCount');\r\n            let lastdatePositivos = new Date(dataJson.r0ByDate[dataJson.r0ByDate.length - 1].date);\r\n            let formattedlastdatePositivos = lastdatePositivos.getDate() + \"-\" + (lastdatePositivos.getMonth() + 1) + \"-\" + lastdatePositivos.getFullYear();\r\n            document.getElementById(\"actualizadoPositivos\").innerHTML = 'Actualizado: ' + formattedlastdatePositivos;\r\n\r\n            document.getElementById(\"fallecidos\").innerHTML = dashboard('deceasedCount');\r\n            let lastdateFallecidos = new Date(dataJson.deceasedCountByDate[dataJson.deceasedCountByDate.length - 1].date);\r\n            let formattedLastdateFallecidos = lastdateFallecidos.getDate() + \"-\" + (lastdateFallecidos.getMonth() + 1) + \"-\" + lastdateFallecidos.getFullYear();\r\n            document.getElementById(\"actualizadoFallecidos\").innerHTML = 'Actualizado: ' + formattedLastdateFallecidos;\r\n\r\n            document.getElementById(\"r0\").innerHTML = dashboard('r0');\r\n            let lastdateR0 = new Date(dataJson.r0ByDate[dataJson.r0ByDate.length - 1].date);\r\n            let formattedlastdateR0 = lastdateR0.getDate() + \"-\" + (lastdateR0.getMonth() + 1) + \"-\" + lastdateR0.getFullYear();\r\n            document.getElementById(\"actualizadoR0\").innerHTML = 'Actualizado: ' + formattedlastdateR0;\r\n\r\n            document.getElementById(\"hospitalizaciones\").innerHTML = dashboard('newHospitalAdmissionsWithPCRCount');\r\n\r\n\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Número de Reproducción (r0)');\r\n                for (let element of dataJson.byDate) {\r\n                    if (element.date > '2020-03-07T22:00:00Z') {\r\n                        data.addRow([new Date(element.date), element.r0]);\r\n                    }\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material3'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n    getJSON('https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/covid19-pcr.json', function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Euskadi: Número de casos positivos');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount]);\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n    getJSON('https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/covid19-deceasedPeopleCount.json', function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Número de fallecidos');\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.deceasedCount]);\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material2'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}