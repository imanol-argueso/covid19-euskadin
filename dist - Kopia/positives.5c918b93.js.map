{"version":3,"sources":["getData.js","graphs/positives.js"],"names":["getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","window","err","dataJson","alert","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","element","byDate","addRow","Date","date","positiveCount","options","chart","title","subtitle","hAxis","format","width","height","Line","document","getElementById","draw","convertOptions","aggregatedIncidence","aggregatedIncidenceAR","aggregatedIncidenceBIZ","aggregatedIncidenceGI","drawTable","table","Table","showRowNumber","sortColumn","sortAscending"],"mappings":"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","file":"positives.5c918b93.js","sourceRoot":"..\\src\\covid19","sourcesContent":["export var getJSON = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { getJSON } from '../getData.js';\r\n\r\nwindow.onload = function () {\r\n    //getJSON('https://opendata.euskadi.eus/contenidos/ds_recursos_turisticos/alojamiento_de_euskadi/opendata/alojamientos.json', function (err, data) {\r\n    //getJSON('https://opendata.euskadi.eus/contenidos/ds_informes_estudios/calidad_aire_2020/es_def/adjuntos/datos_horarios/AGURAIN.json', function (err, data) {\r\n    getJSON('https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/covid19-pcr.json', function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            //alert('Your Json result is:  ' + JSON.stringify(data));\r\n            //result.innerText = data.result;\r\n            //result.innerText = JSON.stringify(data);\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Euskadi: Número de casos positivos');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount]);\r\n                }\r\n                var options = {\r\n                    chart: {\r\n                        title: 'Casos positivos nuevos en Euskadi',\r\n                        subtitle: 'Casos positivos nuevos en Euskadi de test PCRs',\r\n                    },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    width: 900,\r\n                    height: 500\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Euskadi: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n                data.addColumn('number', 'Araba: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n                data.addColumn('number', 'Bizkaia: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n                data.addColumn('number', 'Gipuzkoa: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.aggregatedIncidence, element.aggregatedIncidenceAR, element.aggregatedIncidenceBIZ, element.aggregatedIncidenceGI]);\r\n                }\r\n                var options = {\r\n                    chart: {\r\n                        title: 'Casos positivos: incidencia x 100.000 hab.',\r\n                        subtitle: 'Incidencia acumulada 14 días x 100.000 hab. (test PCRs)',\r\n                    },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    width: 900,\r\n                    height: 500\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material0'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n\r\n            google.charts.load('current', { 'packages': ['table'] });\r\n            google.charts.setOnLoadCallback(drawTable);\r\n            function drawTable() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Casos positivos');\r\n                data.addColumn('number', 'Euskadi: Positivos x 100.000 hab.');\r\n                data.addColumn('number', 'Araba');\r\n                data.addColumn('number', 'Bizkaia');\r\n                data.addColumn('number', 'Gizpuzkoa');\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount, element.aggregatedIncidence, element.aggregatedIncidenceAR, element.aggregatedIncidenceBIZ, element.aggregatedIncidenceGI]);\r\n                }\r\n                var table = new google.visualization.Table(document.getElementById('table_div'));\r\n                table.draw(data, { showRowNumber: true, sortColumn: 0, sortAscending: false, width: '100%', height: '100%' });\r\n\r\n            }\r\n        }\r\n    });\r\n}"]}