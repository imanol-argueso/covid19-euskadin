{"version":3,"sources":["../js/config.js","../js/getData.js","../js/tests.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","window","err","dataJson","alert","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","element","byDate","addRow","Date","date","pcrTestCount","serologyTestCount","pcrUniquePersonCount","options","chart","title","subtitle","width","height","Line","document","getElementById","draw","convertOptions","drawTable","table","Table","showRowNumber","sortColumn","sortAscending"],"mappings":";;AEAA;;AACA;;AFDA,AEGAoB,MFHMpB,AEGA,CAACgB,MAAP,GAAgB,CFHC,GAAG,QEGQ,wFFH5B;AAEO,ACFA,ACIH,IDJOP,EDEER,KCFK,GAAG,CDEC,GAAG,MCFMS,ACInBT,GDJS,EAAeU,QAAf,EAAyB,GCIxBT,cAAlB,EAAkC,UAAUmB,GAAV,EAAeC,QAAf,EAAyB;AFD3DpB,ACFA,ACII,EFFJA,ICFIU,ECIIS,CDJD,ECII,CDJD,GCIK,CFFD,ACFAR,EDEG,CEEb,EFFeb,AEEE,SDJX,EDEqB,ACF/B,+BDCqB;AAErBG,ACFAS,ACIQW,EFFRpB,ACFAS,GDEG,ACFA,CAACE,ACIIS,CFFF,GAAEvB,ACFR,CAAS,ACII,CAAC,IDJd,EAAgBU,GDEI,ACFpB,EAAqB,IAArB,YCIyCW,CFJpB,EEIR,CAAL;AFDRjB,ACFAQ,ACIK,EFFLR,ACFAQ,GAAG,ACEC,CDFAG,KCIO,ODJX,GDEmB,ACFA,EDEG,GAAEf,CCFxB,UDEoC,mCAHf;AAIrBK,AEEQmB,EFFRnB,IEEQmB,CFFH,EAAG,GAAExB,AEEI,CAACyB,MAAP,CAAcC,GFFA,CEEd,CAAmB,SAAnB,EAA8B,QFNjB;AAKrBpB,ACHAM,ACIwC,EFDxCN,ACHAM,GAAG,CAACI,MAAJ,EDGY,CCHC,CDGE,GAAEhB,CECmC,CAAC,MDJ5B,ACI2B,GFDvB,4BALR;AAMrBO,ACHI,ACGkC,EFAtCA,KEAQ,CDHAU,MAAM,EDGA,CCHGL,CDGA,ECHG,CDGDZ,ACHEiB,MAAjB,KDG2B,8BANV;AAOrBT,AEAQgB,EFARhB,IEAQgB,MFAE,AEAI,CAACC,CFAF,GAAEzB,EEAP,CAAc2B,QFAK,SEAnB,CAAgCC,SAAhC;AFPa,ACIjB,CDJD,OCIKX,MAAM,IAAI,GAAd,EAAmB;AACfN,ACIA,MDJAA,QAAQ,CAAC,ACIAiB,IDJD,EAAOhB,GAAG,ACIlB,CDJmBM,ECIE,MDJb,CAAR;AACH,ACIO,KDNR,MAEO,CCIKW,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;ADHJpB,ACIIkB,MDJJlB,ECIIkB,IAAI,CAACG,CDJD,CAACf,MAAD,CAAR,ACII,CAAe,MAAf,EAAuB,OAAvB;ADHP,ACIOY,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,kBAAzB;ADHX,ACIWH,GDXZ,KCWYA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,uBAAzB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,0BAAzB;ADJZpB,EAAAA,GAAG,CAACO,IAAJ;AACH,ACKe,CDlBT,YCkBc,IAAIc,OAAT,IAAoBX,QAAQ,CAACY,MAA7B,EAAqC;AACjCL,UAAAA,IAAI,CAACM,MAAL,CAAY,CAAC,IAAIC,IAAJ,CAASH,OAAO,CAACI,IAAjB,CAAD,EAAyBJ,OAAO,CAACK,YAAjC,EAA+CL,OAAO,CAACM,iBAAvD,EAA0EN,OAAO,CAACO,oBAAlF,CAAZ;AACH;;AACD,YAAIC,OAAO,GAAG;AACVC,UAAAA,KAAK,EAAE;AACHC,YAAAA,KAAK,EAAE,4BADJ;AAEHC,YAAAA,QAAQ,EAAE;AAFP,WADG;AAKVC,UAAAA,KAAK,EAAE,GALG;AAMVC,UAAAA,MAAM,EAAE;AANE,SAAd;AAQA,YAAIJ,KAAK,GAAG,IAAIlB,MAAM,CAACC,MAAP,CAAcsB,IAAlB,CAAuBC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAvB,CAAZ;AACAP,QAAAA,KAAK,CAACQ,IAAN,CAAWrB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcsB,IAAd,CAAmBI,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;;AACDjB,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,OAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCyB,SAAhC;;AACA,eAASA,SAAT,GAAqB;AACjB,YAAIvB,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,OAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,kBAAzB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,uBAAzB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,0BAAzB;;AACA,aAAK,IAAIC,OAAT,IAAoBX,QAAQ,CAACY,MAA7B,EAAqC;AACjCL,UAAAA,IAAI,CAACM,MAAL,CAAY,CAAC,IAAIC,IAAJ,CAASH,OAAO,CAACI,IAAjB,CAAD,EAAyBJ,OAAO,CAACK,YAAjC,EAA+CL,OAAO,CAACM,iBAAvD,EAA0EN,OAAO,CAACO,oBAAlF,CAAZ;AACH;;AACD,YAAIa,KAAK,GAAG,IAAI7B,MAAM,CAACM,aAAP,CAAqBwB,KAAzB,CAA+BN,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAA/B,CAAZ;AACAI,QAAAA,KAAK,CAACH,IAAN,CAAWrB,IAAX,EAAiB;AAAE0B,UAAAA,aAAa,EAAE,IAAjB;AAAuBC,UAAAA,UAAU,EAAE,CAAnC;AAAsCC,UAAAA,aAAa,EAAE,KAArD;AAA4DZ,UAAAA,KAAK,EAAE,MAAnE;AAA2EC,UAAAA,MAAM,EAAE;AAAnF,SAAjB;AAEH;AACJ;AACJ,GA5CD;AA6CH,CA9CD","file":"tests.17888de4.js","sourceRoot":"..\\src\\covid19\\es","sourcesContent":["const DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\n\nexport const DATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n","export var getJSON = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { DATAFILES } from './config';\r\nimport { getJSON } from './getData.js';\r\n\r\nwindow.onload = function () {\r\n    getJSON(DATAFILES.EPIDEMICSTATUS, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Test PCR totales');\r\n                data.addColumn('number', ' Test rápidos totales');\r\n                data.addColumn('number', ' Personas únicas con PCR');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.pcrTestCount, element.serologyTestCount, element.pcrUniquePersonCount]);\r\n                }\r\n                var options = {\r\n                    chart: {\r\n                        title: 'Test realizados en Euskadi',\r\n                        subtitle: 'Test PCR y test rápidos realizados en Euskadi. Pruebas y personas únicas.',\r\n                    },\r\n                    width: 900,\r\n                    height: 500\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material7'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n            google.charts.load('current', { 'packages': ['table'] });\r\n            google.charts.setOnLoadCallback(drawTable);\r\n            function drawTable() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Test PCR totales');\r\n                data.addColumn('number', ' Test rápidos totales');\r\n                data.addColumn('number', ' Personas únicas con PCR');\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.pcrTestCount, element.serologyTestCount, element.pcrUniquePersonCount]);\r\n                }\r\n                var table = new google.visualization.Table(document.getElementById('table_div7'));\r\n                table.draw(data, { showRowNumber: true, sortColumn: 0, sortAscending: false, width: '100%', height: '100%' });\r\n\r\n            }\r\n        }\r\n    });\r\n}"]}