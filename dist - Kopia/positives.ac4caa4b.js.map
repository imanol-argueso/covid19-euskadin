{"version":3,"sources":["js/config.js","js/getData.js","js/positives.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","window","err","dataJson","alert","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","element","byDate","addRow","Date","date","positiveCount","options","chart","title","subtitle","hAxis","format","width","height","Line","document","getElementById","draw","convertOptions","aggregatedIncidence","aggregatedIncidenceAR","aggregatedIncidenceBIZ","aggregatedIncidenceGI","drawTable","table","Table","showRowNumber","sortColumn","sortAscending"],"mappings":";;AEAA;;AACA;;AFDA,AEEAoB,MFFMpB,AEEA,CAACgB,MAAP,GAAgB,CFFC,GAAG,QEEQ,wFFF5B;AAEO,ACFA,ACGH,IDHOP,EDEER,KCFK,GAAG,CDEC,GAAG,MCFMS,GAAV,EAAeC,QAAf,EAAyB;ADG1CT,ACFA,ACGA,EFDAA,ICFIU,GAAG,GAAG,IDEI,ACFAC,EDEG,GAAEb,SCFT,EDEqB,ACF/B,+BDCqB;AAErBG,ACFAS,ACGA,EFDAT,ACFAS,GDEG,ACFA,CAACE,CDEE,GAAEd,ACFR,CAAS,KAAT,EAAgBU,GDEI,ACFpB,EAAqB,CCGbT,GDHR,aDAqB,EEGHE,GAAlB,EAAuB,UAAUkB,GAAV,EAAeC,QAAf,EAAyB;AFAhDlB,ACFAQ,ACGI,EFDJR,ACFAQ,GAAG,CAACG,ECGIM,GAAG,IAAI,GDHf,CCGI,EFDe,ACFA,ACGE,EFDC,GAAErB,CCFxB,UDEoC,mCAHf;AAIrBK,AECQkB,EFDRlB,IECQkB,CFDH,EAAG,EECK,CFDHvB,AECI,WFDQ,gBECmBqB,GAA5B,CAAL,CFLa;AAKrBf,ACHAM,ACIK,EFDLN,ACHAM,GAAG,ACEC,CDFAI,KCIO,CDJX,EDGY,CCHC,CDGE,GAAEhB,QCHQ,GDGI,4BALR;AAMrBO,ACHI,ACII,EFDRA,MCHQU,MAAM,EDGA,CCHGL,CDGA,ECHG,CDGDZ,ACHEiB,MAAjB,KDG2B,8BANV;AAOrBT,AECQ,EFDRA,UAAU,EAAG,GAAER,WAAY;AAPN,ACIjB,ACKI,CFTL,OCIKiB,MAAM,IAAI,GAAd,EAAmB;AACfN,ACKAa,MDLAb,ACKAa,MAAM,CAACC,CDLC,CAAC,IAAD,ACKR,CAAcC,CDLCd,GAAG,ACKlB,CDLmBM,ACKA,QDLX,CAAR,ACKA,EAA8B;ADJjC,ACImC,KDNpC,MAEO,SCIyC,CAAC,MAAD;ADH5CP,ACG8B,MDH9BA,CCGA,ODHQ,CAACM,MAAD,CAAR;AACH,ACGGO,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;ADFP,GAPD;ACWQ,eAASA,SAAT,GAAqB;ADH7BhB,ACIY,EDJZA,GAAG,CAACO,IAAJ,ECIgBU,IAAI,GAA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","file":"positives.ac4caa4b.js","sourceRoot":"..\\src\\covid19","sourcesContent":["const DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\n\nexport const DATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n","export var getJSON = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { DATAFILES } from './config';\r\nimport { getJSON } from './getData.js';\r\nwindow.onload = function () {\r\n    //getJSON('https://opendata.euskadi.eus/contenidos/ds_recursos_turisticos/alojamiento_de_euskadi/opendata/alojamientos.json', function (err, data) {\r\n    //getJSON('https://opendata.euskadi.eus/contenidos/ds_informes_estudios/calidad_aire_2020/es_def/adjuntos/datos_horarios/AGURAIN.json', function (err, data) {\r\n    getJSON(DATAFILES.PCR, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            //alert('Your Json result is:  ' + JSON.stringify(data));\r\n            //result.innerText = data.result;\r\n            //result.innerText = JSON.stringify(data);\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Euskadi: Número de casos positivos');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount]);\r\n                }\r\n                var options = {\r\n                    chart: {\r\n                        title: 'Casos positivos nuevos en Euskadi',\r\n                        subtitle: 'Casos positivos nuevos en Euskadi de test PCRs',\r\n                    },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    width: 900,\r\n                    height: 500\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Euskadi: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n                data.addColumn('number', 'Araba: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n                data.addColumn('number', 'Bizkaia: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n                data.addColumn('number', 'Gipuzkoa: Incidencia acumulada 14 días x 100.000 hab. (test PCRs)');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.aggregatedIncidence, element.aggregatedIncidenceAR, element.aggregatedIncidenceBIZ, element.aggregatedIncidenceGI]);\r\n                }\r\n                var options = {\r\n                    chart: {\r\n                        title: 'Casos positivos: incidencia x 100.000 hab.',\r\n                        subtitle: 'Incidencia acumulada 14 días x 100.000 hab. (test PCRs)',\r\n                    },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    width: 900,\r\n                    height: 500\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material0'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n\r\n            google.charts.load('current', { 'packages': ['table'] });\r\n            google.charts.setOnLoadCallback(drawTable);\r\n            function drawTable() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', 'Fecha');\r\n                data.addColumn('number', 'Casos positivos');\r\n                data.addColumn('number', 'Euskadi: Positivos x 100.000 hab.');\r\n                data.addColumn('number', 'Araba');\r\n                data.addColumn('number', 'Bizkaia');\r\n                data.addColumn('number', 'Gizpuzkoa');\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount, element.aggregatedIncidence, element.aggregatedIncidenceAR, element.aggregatedIncidenceBIZ, element.aggregatedIncidenceGI]);\r\n                }\r\n                var table = new google.visualization.Table(document.getElementById('table_div'));\r\n                table.draw(data, { showRowNumber: true, sortColumn: 0, sortAscending: false, width: '100%', height: '100%' });\r\n\r\n            }\r\n        }\r\n    });\r\n}"]}