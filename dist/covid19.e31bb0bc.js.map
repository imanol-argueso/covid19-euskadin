{"version":3,"sources":["js/config.js","js/getData.js","js/dashboard.js","js/index.js","index.js"],"names":["DATA_SOURCE","module","exports","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","format","n","dashboard","jsonData","jsonDataId","today","byDate","length","yesterday","increment","Math","floor","toFixed","init","DATAFILES","err","dataJson","alert","document","getElementById","innerHTML","lastdatePositivos","Date","r0ByDate","date","formattedlastdatePositivos","getDate","getMonth","getFullYear","lastdateFallecidos","deceasedCountByDate","formattedLastdateFallecidos","lastdateR0","formattedlastdateR0","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","element","addRow","r0","options","legend","position","hAxis","colors","width","height","chart","Line","draw","convertOptions","positiveCount","deceasedCount"],"mappings":"AAAA,ACAA,MDAMA,WAAW,GAAG,gGAApB,EAEA;ACDAC,MAAM,CAACC,OAAP,GAAiB,UAAUQ,GAAV,EAAeC,QAAf,EAAyB;AGD1C,AJGAV,ACDI,MDCE,ACDEW,CDCDV,ECDI,GAAG,EDCd,ECDkBW,CDCD,aCDH,EAAV;ADEAV,ACDAS,EDCAT,ACDAS,GAAG,CAACE,IAAJ,CAAS,KDCK,ACDd,EDCiB,ACDDJ,GDCGV,ACDnB,EAAqB,IAArB,KDC+B,+BADlB;AIDjB,AJGII,ACDAQ,EDCAR,ACDAQ,GDCG,ACDA,CAACG,CDCE,GAAEf,QCDR,GDCoB,ACDD,MAAnB,aDDa;AAGbK,EAAAA,mBAAmB,EAAG,GAAEL,WAAY,mCAHvB;AAIbM,ACFAM,EDEAN,ACFAM,GAAG,CAACI,CDEC,EAAG,GAAEhB,ACFV,GAAa,QDES,ICFG,iBDFZ;AAKbO,ACFI,AENR,EHQIA,MCFQU,MDEI,ACFE,EDEC,CCFEL,EDEAZ,CCFG,CAACiB,MAAjB,GDEyB,4BALhB;AAMbT,AETJ,EFSIA,cAAc,EAAG,GAAER,WAAY,8BANlB;AAObS,ACHI,AENR,EHSIA,MCHQQ,IDGE,EAAG,ACHC,GDGCjB,CCHG,GAAd,EAAmB,KDGI;AAPd,AEFjB,ADOYW,CDLZ,KCKYA,GCPHS,KDOW,CCPpB,ADOqB,CCPLC,CAAhB,EAAmB,ADOC,EAAOT,GAAG,CAACM,QAAX,CAAR;ACNR,ADOK,AEPT,KFKQ,ICLG,CAACG,CAAC,ADOE,ICPE,CAAL,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAA7B;AACH,ADOWV,MAAAA,QAAQ,CAACM,MAAD,CAAR;AACH,AEPF,SAASgB,IAAT,GAAgB;ADAvB,ADQK,AEND,GFDA,MCDKX,SAAT,CAAmBC,KCEPW,GDFZ,EAA6BV,UAA7B,EAAyC,CCEnBrB,cAAlB,EAAkC,UAAUgC,GAAV,EAAeC,QAAf,EAAyB;ADD3D,ACEI,MDFAX,ECEIU,GDFC,ACEE,GDFCZ,CCEG,IAAX,EAAiB,CDFD,CAACG,MAAT,CAAgBH,QAAQ,CAACG,MAAT,CAAgBC,MAAhB,GAAyB,CAAzC,EAA4CH,UAA5C,CAAZ;AACA,ADOAZ,AELQyB,EFKRzB,GAAG,CCPCgB,ADOAT,AELIkB,IFKR,CELa,CAAC,GDFD,GAAGd,QAAQ,CAACG,MAAT,CAAgBH,KCESY,GDFD,ACE3B,CDF4BT,ACEjC,MDFwB,CAAgBC,MAAhB,GAAyB,CAAzC,EAA4CH,UAA5C,CAAhB;AACA,ADOH,AELQ,CFRT,IEMQ,CDAAK,KCEO,IDFE,GAAIJ,KAAK,GAAGG,SAAzB;ACGQU,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6C,0BAAUJ,QAAV,EAAoB,cAApB,CAA7C;ADFR,ACGQE,MDHJR,ACGIQ,IDHA,CAACP,GCGO,CAACQ,CDHb,CAAWV,SAAX,GCGI,CAAwB,EDHFA,SAA9B,EAAyC,CCGjC,EAAwCW,SAAxC,GAAoD,0BAAUJ,QAAV,EAAoB,mBAApB,CAApD;ADFJP,ACGIS,IDHJT,ECGIS,ODHK,CCGG,CAACC,CDHDV,SAAS,CAACG,GCGlB,CAAwB,GDHhB,CAAkB,CAAlB,CAAZ,aCGI,EAA6CQ,SAA7C,GAAyD,0BAAUJ,QAAV,EAAoB,sBAApB,CAAzD;ADFP,ACGOE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyD,0BAAUJ,QAAV,EAAoB,mCAApB,CAAzD;AACAE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyD,0BAAUJ,QAAV,EAAoB,gBAApB,CAAzD;ADJP,ACKOE,MAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,SAA9C,GAA0D,0BAAUJ,QAAV,EAAoB,uBAApB,CAA1D;ADJR,ACMQE,MAAAA,GDNAb,KAAD,ACMS,CAACc,EDNA,IAAV,GAAiBnB,KCMhB,CDNsB,ACME,CDNDS,SAAD,CAAvB,ACMC,EAAqCW,CDND,GAA5C,KCMQ,GAAiD,0BAAUJ,QAAV,EAAoB,oBAApB,CAAjD;ADLX,ACMW,UAAIK,iBAAiB,GAAG,IAAIC,IAAJ,CAASN,QAAQ,CAACO,QAAT,CAAkBP,QAAQ,CAACO,QAAT,CAAkBhB,MAAlB,GAA2B,CAA7C,EAAgDiB,IAAzD,CAAxB;AACA,UAAIC,0BAA0B,GAAGJ,iBAAiB,CAACK,OAAlB,KAA8B,GAA9B,IAAqCL,iBAAiB,CAACM,QAAlB,KAA+B,CAApE,IAAyE,GAAzE,GAA+EN,iBAAiB,CAACO,WAAlB,EAAhH;AACAV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,EAAgDC,SAAhD,GAA4D,kBAAkBK,0BAA9E;AAEAP,MAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,GAAkD,0BAAUJ,QAAV,EAAoB,eAApB,CAAlD;AACA,UAAIa,kBAAkB,GAAG,IAAIP,IAAJ,CAASN,QAAQ,CAACc,mBAAT,CAA6Bd,QAAQ,CAACc,mBAAT,CAA6BvB,MAA7B,GAAsC,CAAnE,EAAsEiB,IAA/E,CAAzB;AACA,UAAIO,2BAA2B,GAAGF,kBAAkB,CAACH,OAAnB,KAA+B,GAA/B,IAAsCG,kBAAkB,CAACF,QAAnB,KAAgC,CAAtE,IAA2E,GAA3E,GAAiFE,kBAAkB,CAACD,WAAnB,EAAnH;AACAV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,SAAjD,GAA6D,kBAAkBW,2BAA/E;AAEAb,MAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,GAA0C,0BAAUJ,QAAV,EAAoB,IAApB,CAA1C;AACA,UAAIgB,UAAU,GAAG,IAAIV,IAAJ,CAASN,QAAQ,CAACO,QAAT,CAAkBP,QAAQ,CAACO,QAAT,CAAkBhB,MAAlB,GAA2B,CAA7C,EAAgDiB,IAAzD,CAAjB;AACA,UAAIS,mBAAmB,GAAGD,UAAU,CAACN,OAAX,KAAuB,GAAvB,IAA8BM,UAAU,CAACL,QAAX,KAAwB,CAAtD,IAA2D,GAA3D,GAAiEK,UAAU,CAACJ,WAAX,EAA3F;AACAV,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,SAAzC,GAAqD,kBAAkBa,mBAAvE;AAEAf,MAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,SAA7C,GAAyD,0BAAUJ,QAAV,EAAoB,mCAApB,CAAzD;AAEAkB,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,MAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;;AAEA,eAASA,SAAT,GAAqB;AAEjB,YAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,EAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,6BAAzB;;AACA,aAAK,IAAIC,OAAT,IAAoB3B,QAAQ,CAACV,MAA7B,EAAqC;AACjC,cAAIqC,OAAO,CAACnB,IAAR,GAAe,sBAAnB,EAA2C;AACvCe,YAAAA,IAAI,CAACK,MAAL,CAAY,CAAC,IAAItB,IAAJ,CAASqB,OAAO,CAACnB,IAAjB,CAAD,EAAyBmB,OAAO,CAACE,EAAjC,CAAZ;AACH;AACJ;;AACD,YAAIC,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAEjD,YAAAA,MAAM,EAAE;AAAV,WAFG;AAGVkD,UAAAA,MAAM,EAAE,CAAC,SAAD,CAHE;AAIVC,UAAAA,KAAK,EAAE,GAJG;AAKVC,UAAAA,MAAM,EAAE;AALE,SAAd;AAOA,YAAIC,KAAK,GAAG,IAAInB,MAAM,CAACC,MAAP,CAAcmB,IAAlB,CAAuBpC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,CAAvB,CAAZ;AACAkC,QAAAA,KAAK,CAACE,IAAN,CAAWhB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcmB,IAAd,CAAmBE,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;AACJ;AACJ,GApDD;AAqDA,wBAAQhC,kBAAU9B,GAAlB,EAAuB,UAAU+B,GAAV,EAAeC,QAAf,EAAyB;AAC5C,QAAID,GAAG,IAAI,IAAX,EAAiB;AACbE,MAAAA,KAAK,CAAC,2BAA2BF,GAA5B,CAAL;AACH,KAFD,MAEO;AACHmB,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,MAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;;AAEA,eAASA,SAAT,GAAqB;AACjB,YAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,EAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,oCAAzB;;AAEA,aAAK,IAAIC,OAAT,IAAoB3B,QAAQ,CAACV,MAA7B,EAAqC;AACjCiC,UAAAA,IAAI,CAACK,MAAL,CAAY,CAAC,IAAItB,IAAJ,CAASqB,OAAO,CAACnB,IAAjB,CAAD,EAAyBmB,OAAO,CAACc,aAAjC,CAAZ;AACH;;AACD,YAAIX,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAEjD,YAAAA,MAAM,EAAE;AAAV,WAFG;AAGVkD,UAAAA,MAAM,EAAE,CAAC,SAAD,CAHE;AAIVC,UAAAA,KAAK,EAAE,GAJG;AAKVC,UAAAA,MAAM,EAAE;AALE,SAAd;AAOA,YAAIC,KAAK,GAAG,IAAInB,MAAM,CAACC,MAAP,CAAcmB,IAAlB,CAAuBpC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,CAAvB,CAAZ;AACAkC,QAAAA,KAAK,CAACE,IAAN,CAAWhB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcmB,IAAd,CAAmBE,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;AACJ;AACJ,GA1BD;AA2BA,wBAAQhC,kBAAU7B,mBAAlB,EAAuC,UAAU8B,GAAV,EAAeC,QAAf,EAAyB;AAC5D,QAAID,GAAG,IAAI,IAAX,EAAiB;AACbE,MAAAA,KAAK,CAAC,2BAA2BF,GAA5B,CAAL;AACH,KAFD,MAEO;AACHmB,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,MAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC;;AAEA,eAASA,SAAT,GAAqB;AACjB,YAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,QAAAA,IAAI,CAACG,SAAL,CAAe,MAAf,EAAuB,EAAvB;AACAH,QAAAA,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,sBAAzB;;AACA,aAAK,IAAIC,OAAT,IAAoB3B,QAAQ,CAACV,MAA7B,EAAqC;AACjCiC,UAAAA,IAAI,CAACK,MAAL,CAAY,CAAC,IAAItB,IAAJ,CAASqB,OAAO,CAACnB,IAAjB,CAAD,EAAyBmB,OAAO,CAACe,aAAjC,CAAZ;AACH;;AACD,YAAIZ,OAAO,GAAG;AACVC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADE;AAEVC,UAAAA,KAAK,EAAE;AAAEjD,YAAAA,MAAM,EAAE;AAAV,WAFG;AAGVkD,UAAAA,MAAM,EAAE,CAAC,SAAD,CAHE;AAIVC,UAAAA,KAAK,EAAE,GAJG;AAKVC,UAAAA,MAAM,EAAE;AALE,SAAd;AAOA,YAAIC,KAAK,GAAG,IAAInB,MAAM,CAACC,MAAP,CAAcmB,IAAlB,CAAuBpC,QAAQ,CAACC,cAAT,CAAwB,0BAAxB,CAAvB,CAAZ;AACAkC,QAAAA,KAAK,CAACE,IAAN,CAAWhB,IAAX,EAAiBL,MAAM,CAACC,MAAP,CAAcmB,IAAd,CAAmBE,cAAnB,CAAkCV,OAAlC,CAAjB;AACH;AACJ;AACJ,GAzBD;AA0BH","file":"covid19.e31bb0bc.js","sourceRoot":"..\\src\\covid19","sourcesContent":["const DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\n\n//export const DATAFILES = {\nmodule.exports = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};","//export var getJSON = function (url, callback) {\r\nmodule.exports = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { getJSON } from './getData.js';\r\nfunction format(n) {\r\n    return (n >= 0 ? '+' : '') + n;\r\n}\r\nfunction dashboard(jsonData, jsonDataId) {\r\n    let today = jsonData.byDate[jsonData.byDate.length - 1][jsonDataId];\r\n    let yesterday = jsonData.byDate[jsonData.byDate.length - 2][jsonDataId];\r\n    let increment = (today - yesterday);\r\n    if (Math.floor(increment) !== increment) {\r\n        increment = increment.toFixed(2);\r\n    };\r\n    return (today) + ' (' + format(increment) + ')';\r\n}\r\nexport { format, dashboard };","import { DATAFILES } from './config';\r\nimport { getJSON } from './getData.js';\r\nimport { format, dashboard } from './dashboard.js';\r\n\r\nexport function init() {\r\n\r\n    getJSON(DATAFILES.EPIDEMICSTATUS, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            document.getElementById(\"tests\").innerHTML = dashboard(dataJson, 'pcrTestCount');\r\n            document.getElementById(\"testsRapidos\").innerHTML = dashboard(dataJson, 'serologyTestCount');\r\n            document.getElementById(\"personasUnicasPcr\").innerHTML = dashboard(dataJson, 'pcrUniquePersonCount');\r\n            document.getElementById(\"hospitalizaciones\").innerHTML = dashboard(dataJson, 'newHospitalAdmissionsWithPCRCount');\r\n            document.getElementById(\"hospitalizadosUci\").innerHTML = dashboard(dataJson, 'icuPeopleCount');\r\n            document.getElementById(\"altasHospitalarias\").innerHTML = dashboard(dataJson, 'hospitalReleasedCount');\r\n\r\n            document.getElementById(\"positivos\").innerHTML = dashboard(dataJson, 'totalPositiveCount');\r\n            let lastdatePositivos = new Date(dataJson.r0ByDate[dataJson.r0ByDate.length - 1].date);\r\n            let formattedlastdatePositivos = lastdatePositivos.getDate() + \"-\" + (lastdatePositivos.getMonth() + 1) + \"-\" + lastdatePositivos.getFullYear();\r\n            document.getElementById(\"actualizadoPositivos\").innerHTML = 'Actualizado: ' + formattedlastdatePositivos;\r\n\r\n            document.getElementById(\"fallecidos\").innerHTML = dashboard(dataJson, 'deceasedCount');\r\n            let lastdateFallecidos = new Date(dataJson.deceasedCountByDate[dataJson.deceasedCountByDate.length - 1].date);\r\n            let formattedLastdateFallecidos = lastdateFallecidos.getDate() + \"-\" + (lastdateFallecidos.getMonth() + 1) + \"-\" + lastdateFallecidos.getFullYear();\r\n            document.getElementById(\"actualizadoFallecidos\").innerHTML = 'Actualizado: ' + formattedLastdateFallecidos;\r\n\r\n            document.getElementById(\"r0\").innerHTML = dashboard(dataJson, 'r0');\r\n            let lastdateR0 = new Date(dataJson.r0ByDate[dataJson.r0ByDate.length - 1].date);\r\n            let formattedlastdateR0 = lastdateR0.getDate() + \"-\" + (lastdateR0.getMonth() + 1) + \"-\" + lastdateR0.getFullYear();\r\n            document.getElementById(\"actualizadoR0\").innerHTML = 'Actualizado: ' + formattedlastdateR0;\r\n\r\n            document.getElementById(\"hospitalizaciones\").innerHTML = dashboard(dataJson, 'newHospitalAdmissionsWithPCRCount');\r\n\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Número de Reproducción (r0)');\r\n                for (let element of dataJson.byDate) {\r\n                    if (element.date > '2020-03-07T22:00:00Z') {\r\n                        data.addRow([new Date(element.date), element.r0]);\r\n                    }\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material_mini3'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n    getJSON(DATAFILES.PCR, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Euskadi: Número de casos positivos');\r\n\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.positiveCount]);\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material_mini1'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n    getJSON(DATAFILES.DECEASEDPEOPLECOUNT, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['line'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('date', '');\r\n                data.addColumn('number', 'Número de fallecidos');\r\n                for (let element of dataJson.byDate) {\r\n                    data.addRow([new Date(element.date), element.deceasedCount]);\r\n                }\r\n                var options = {\r\n                    legend: { position: 'none' },\r\n                    hAxis: { format: 'M/d/yy' },\r\n                    colors: ['#6c757d'],\r\n                    width: 297,\r\n                    height: 197\r\n                };\r\n                var chart = new google.charts.Line(document.getElementById('linechart_material_mini2'));\r\n                chart.draw(data, google.charts.Line.convertOptions(options));\r\n            }\r\n        }\r\n    });\r\n}\r\n","import { init } from './js';\n\ninit();\n"]}