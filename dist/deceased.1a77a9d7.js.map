{"version":3,"sources":["js/deceased.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","updated","jsonData","lastdate","Date","formattedlastdate","getDate","getMonth","getFullYear","window","err","dataJson","alert","document","getElementById","innerHTML","byDate","length","date","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","location","href","indexOf","addColumn","options","chart","title","hAxis","format","width","height","element","addRow","deceasedCount","Line","draw","convertOptions","drawTable","monthYearFormatter","DateFormat","pattern","table","Table","showRowNumber","sortColumn","sortAscending"],"mappings":"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","file":"deceased.1a77a9d7.js","sourceRoot":"..\\src\\covid19","sourcesContent":["//import { DATAFILES } from './config';\nconst DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\nDATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n//import { getJSON } from './getData.js';\nvar getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('get', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n        var status = xhr.status;\n        if (status == 200) {\n            callback(null, xhr.response);\n        } else {\n            callback(status);\n        }\n    };\n    xhr.send();\n};\nfunction updated(jsonData) {\n    let lastdate = new Date(jsonData);\n    let formattedlastdate = lastdate.getDate() + \"/\" + (lastdate.getMonth() + 1) + \"/\" + lastdate.getFullYear();\n    return formattedlastdate;\n}\nwindow.onload = function () {\n    getJSON(DATAFILES.DECEASEDPEOPLECOUNT, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n            document.getElementById(\"fechaActualizacion\").innerHTML += updated(dataJson.byDate[dataJson.byDate.length - 1].date);\n\n            google.charts.load('current', { 'packages': ['line'] });\n            google.charts.setOnLoadCallback(drawChart);\n\n            function drawChart() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('date', 'Data');\n                    data.addColumn('number', 'Hildakoen kopurua');\n                    var options = {\n                        chart: {\n                            title: 'Euskadin izandako hildaken kopurua',\n                        },\n                        hAxis: { format: 'd/M/yy' },\n                        width: 900,\n                        height: 500\n                    };\n\n                } else {\n                    data.addColumn('date', 'Fecha');\n                    data.addColumn('number', 'Número de Fallecidos');\n                    var options = {\n                        chart: {\n                            title: 'Número de fallecidos en Euskadi',\n                        },\n                        hAxis: { format: 'd/M/yy' },\n                        width: 900,\n                        height: 500\n                    };\n                }\n                for (let element of dataJson.byDate) {\n                    data.addRow([new Date(element.date), element.deceasedCount]);\n                }\n\n                var chart = new google.charts.Line(document.getElementById('linechart_material2'));\n                chart.draw(data, google.charts.Line.convertOptions(options));\n            }\n            google.charts.load('current', { 'packages': ['table'] });\n            google.charts.setOnLoadCallback(drawTable);\n\n            function drawTable() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('date', 'Data');\n                    data.addColumn('number', 'Hildakoak');\n                    var monthYearFormatter = new google.visualization.DateFormat({\n                        pattern: \"yyy-MM-dd\"\n                    });\n                } else {\n                    data.addColumn('date', 'Fecha');\n                    data.addColumn('number', 'Fallecidos');\n                    var monthYearFormatter = new google.visualization.DateFormat({\n                        pattern: \"dd-MM-yyy\"\n                    });\n                }\n                for (let element of dataJson.byDate) {\n                    data.addRow([new Date(element.date), element.deceasedCount]);\n                }\n                monthYearFormatter.format(data, 0);\n                var table = new google.visualization.Table(document.getElementById('table_div2'));\n                table.draw(data, { showRowNumber: true, sortColumn: 0, sortAscending: false, width: '100%', height: '100%' });\n            }\n        }\n    });\n}"]}