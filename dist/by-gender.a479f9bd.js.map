{"version":3,"sources":["js/by-gender.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","BYAGENEWPOSITIVES","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","updated","jsonData","lastdate","Date","formattedlastdate","getDate","getMonth","getFullYear","window","err","dataJson","alert","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","location","href","indexOf","addColumn","options","chart","title","subtitle","hAxis","format","width","height","element","byDate","addRow","date","menCount","womenCount","Line","document","getElementById","draw","convertOptions","innerHTML","lastUpdateDate","byAgeRange","ageRange","positivesByMenPopulationRate","positivesByWomenPopulationRate","Bar","lethalityMenRate","lethalityWomenRate","drawTable","population","table","Table","sortColumn","sortAscending"],"mappings":"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","file":"by-gender.a479f9bd.js","sourceRoot":"..\\src\\covid19","sourcesContent":["//import { DATAFILES } from './config';\nconst DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\nDATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n    BYAGENEWPOSITIVES: `${DATA_SOURCE}/covid19-pcr-positives.json`\n};\n//import { getJSON } from './getData.js';\nvar getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('get', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n        var status = xhr.status;\n        if (status == 200) {\n            callback(null, xhr.response);\n        } else {\n            callback(status);\n        }\n    };\n    xhr.send();\n};\nfunction updated(jsonData) {\n    let lastdate = new Date(jsonData);\n    let formattedlastdate = (lastdate.getDate() - 1) + \"/\" + (lastdate.getMonth() + 1) + \"/\" + lastdate.getFullYear();\n    return formattedlastdate;\n}\nwindow.onload = function () {\n\n    getJSON(DATAFILES.BYAGENEWPOSITIVES, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n\n            google.charts.load('current', { 'packages': ['line'] });\n            google.charts.setOnLoadCallback(drawChart);\n\n            function drawChart() {\n\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('date', 'Data');\n                    data.addColumn('number', 'Gizonezkoak');\n                    data.addColumn('number', 'Emakumezkoak');\n                    var options = {\n                        chart: {\n                            title: 'Kasu positibo berriak sexuaren arabera',\n                            subtitle: 'Kasu positibo berrien banaketa sexuaren arabera termino absolutuetan Euskal Autonomia Erkidegoan.',\n                        },\n                        hAxis: { format: 'yy/M/d' },\n                        width: 900,\n                        height: 500\n                    };\n                } else {\n                    data.addColumn('date', 'Fecha');\n                    data.addColumn('number', 'Hombres');\n                    data.addColumn('number', 'Mujeres');\n                    var options = {\n                        chart: {\n                            title: 'Casos positivos nuevos por sexo',\n                            subtitle: 'Distribución de los nuevos casos positivos en términos absolutos por edad en la Comunidad Autónoma de Euskadi.',\n                        },\n                        hAxis: { format: 'd/M/yy' },\n                        width: 900,\n                        height: 500\n                    };\n                }\n                for (let element of dataJson.byDate) {\n                    data.addRow([new Date(element.date), element.menCount, element.womenCount]);\n                }\n                var chart = new google.charts.Line(document.getElementById('linechart_material11'));\n                chart.draw(data, google.charts.Line.convertOptions(options));\n            };\n        }\n    });\n\n    getJSON(DATAFILES.BYAGE, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n            document.getElementById(\"fechaActualizacion\").innerHTML += updated(dataJson.lastUpdateDate);\n\n            google.charts.load('current', { 'packages': ['bar'] });\n            google.charts.setOnLoadCallback(drawChart);\n\n            function drawChart() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Adina');\n                    data.addColumn('number', 'Gizonezkoak');\n                    data.addColumn('number', 'Emakumezkoak');\n                    var options = {\n                        chart: {\n                            title: 'Positiboak sexuaren eta adinaren arabera',\n                            subtitle: '100.000 biztanleko positiboen tasa, sexuaren eta adin tartearen arabera.',\n                        }\n                    };\n                } else {\n                    data.addColumn('string', 'Edad');\n                    data.addColumn('number', 'Hombres');\n                    data.addColumn('number', 'Mujeres');\n                    var options = {\n                        chart: {\n                            title: 'Positivos por sexo y rango de edad',\n                            subtitle: 'Tasa de positivos por 100.000 habitantes en función del sexo y del rango de edad.',\n                        }\n                    };\n                }\n                for (let element of dataJson.byAgeRange) {\n                    if (element.ageRange !== 'No consta') {\n                        data.addRow([element.ageRange + ' años', element.positivesByMenPopulationRate, element.positivesByWomenPopulationRate]);\n                    }\n                }\n                var chart = new google.charts.Bar(document.getElementById('columnchart_material'));\n                chart.draw(data, google.charts.Bar.convertOptions(options));\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Adina');\n                    data.addColumn('number', 'Gizonezkoak');\n                    data.addColumn('number', 'Emakumezkoak');\n                    var options = {\n                        chart: {\n                            title: 'Hilgarritasuna sexuaren eta adinaren arabera',\n                            subtitle: 'Gaixotasunaren hilgarritasuna sexuaren eta adin tartearen arabera.',\n                        }\n                    };\n                } else {\n                    data.addColumn('string', 'Edad');\n                    data.addColumn('number', 'Hombres');\n                    data.addColumn('number', 'Mujeres');\n                    var options = {\n                        chart: {\n                            title: 'Letalidad por sexo y rango de edad',\n                            subtitle: 'Letalidad de la enfermedad en función del sexo y del rango de edad.',\n                        }\n                    };\n                }\n\n                for (let element of dataJson.byAgeRange) {\n                    if (element.ageRange !== 'No consta') {\n                        data.addRow([element.ageRange + ' años', element.lethalityMenRate, element.lethalityWomenRate]);\n                    }\n                }\n                var chart = new google.charts.Bar(document.getElementById('columnchart_material2'));\n                chart.draw(data, google.charts.Bar.convertOptions(options));\n            }\n\n            google.charts.load('current', { 'packages': ['table'] });\n            google.charts.setOnLoadCallback(drawTable);\n            function drawTable() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Adin tartea');\n                    data.addColumn('number', 'Populazioa');\n                    data.addColumn('number', 'Gizonezkoak: postibo tasa');\n                    data.addColumn('number', 'Emakumezkoak: positibo tasa');\n                    data.addColumn('number', 'Gizonezkoak: hilgarritasuna');\n                    data.addColumn('number', 'Emakumezkoak: hilgarritasuna');\n                } else {\n                    data.addColumn('string', 'Rango de edad');\n                    data.addColumn('number', 'Poblacion');\n                    data.addColumn('number', 'Hombres: Tasa de positivos');\n                    data.addColumn('number', 'Mujeres: Tasa de positivos');\n                    data.addColumn('number', 'Hombres: Letalidad');\n                    data.addColumn('number', 'Mujeres: Letalidad');\n                }\n                for (let element of dataJson.byAgeRange) {\n                    if (element.ageRange !== 'No consta') {\n                        data.addRow([element.ageRange, element.population, element.positivesByMenPopulationRate, element.positivesByWomenPopulationRate, element.lethalityMenRate, element.lethalityWomenRate,]);\n                    }\n                }\n                var table = new google.visualization.Table(document.getElementById('table_div7'));\n                table.draw(data, { sortColumn: 0, sortAscending: true, width: '100%', height: 'auto' });\n\n            }\n        }\n    });\n}"]}