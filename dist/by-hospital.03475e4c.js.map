{"version":3,"sources":["js/by-hospital.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","updated","jsonData","lastdate","Date","formattedlastdate","getDate","getMonth","getFullYear","window","err","dataJson","alert","document","getElementById","innerHTML","byDate","length","date","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","location","href","indexOf","addColumn","options","chart","title","subtitle","hAxis","format","width","height","element","addRow","hospitalAdmissionsWithPCRCount","icuPeopleCount","Line","draw","convertOptions","drawTable","monthYearFormatter","DateFormat","pattern","table","Table","showRowNumber","sortColumn","sortAscending","drawStuff","byHospital","hospital","floorPeopleCount","bars","series","axis","axes","x","distance","label","brightness","side","Bar"],"mappings":"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","file":"by-hospital.03475e4c.js","sourceRoot":"..\\src\\covid19","sourcesContent":["//import { DATAFILES } from './config';\n//const DATAFILES = require('./config');\nconst DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\nDATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n//import { getJSON } from './getData.js';\n//const getJSON = require('./getData');\nvar getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('get', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n        var status = xhr.status;\n        if (status == 200) {\n            callback(null, xhr.response);\n        } else {\n            callback(status);\n        }\n    };\n    xhr.send();\n};\nfunction updated(jsonData) {\n    let lastdate = new Date(jsonData);\n    let formattedlastdate = lastdate.getDate() + \"/\" + (lastdate.getMonth() + 1) + \"/\" + lastdate.getFullYear();\n    return formattedlastdate;\n}\n\nwindow.onload = function () {\n    getJSON(DATAFILES.EPIDEMICSTATUS, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n            document.getElementById(\"fechaActualizacion\").innerHTML += updated(dataJson.byDate[dataJson.byDate.length - 1].date);\n\n            google.charts.load('current', { 'packages': ['line'] });\n            google.charts.setOnLoadCallback(drawChart);\n\n            function drawChart() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('date', 'Data');\n                    data.addColumn('number', 'Plantan ingresatutako pazienteak');\n                    data.addColumn('number', 'ZIUn ingresatutako pazienteak');\n                    var options = {\n                        chart: {\n                            title: 'Osakidetzako ospitaleetako egoera orokorra',\n                            subtitle: 'Plantan eta ZIUn ingresatutako pazienteen bilakaera.',\n                        },\n                        hAxis: { format: 'yy/M/d' },\n                        width: 900,\n                        height: 500\n                    };\n                } else {\n                    data.addColumn('date', 'Fecha');\n                    data.addColumn('number', 'Pacientes ingresados en Planta');\n                    data.addColumn('number', 'Pacientes ingresados en UCI');\n                    var options = {\n                        chart: {\n                            title: 'Situación global en los hospitales de Osakidetza (Servicio Vasco de Salud)',\n                            subtitle: 'Evolución de los pacientes ingresados en planta y UCI.',\n                        },\n                        hAxis: { format: 'd/M/yy' },\n                        width: 900,\n                        height: 500\n                    };\n                }\n\n                for (let element of dataJson.byDate) {\n                    if (element.date > '2020-10-03T22:00:00Z') {\n                        data.addRow([new Date(element.date), element.hospitalAdmissionsWithPCRCount, element.icuPeopleCount]);\n                    }\n                }\n                var chart = new google.charts.Line(document.getElementById('linechart_material8'));\n                chart.draw(data, google.charts.Line.convertOptions(options));\n\n            }\n            google.charts.load('current', { 'packages': ['table'] });\n            google.charts.setOnLoadCallback(drawTable);\n            function drawTable() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('date', 'Data');\n                    data.addColumn('number', 'Plantan ingresatuta');\n                    data.addColumn('number', 'ZIUn ingresatuta');\n                    var monthYearFormatter = new google.visualization.DateFormat({\n                        pattern: \"yyy-MM-dd\"\n                    });\n                } else {\n                    data.addColumn('date', 'Fecha');\n                    data.addColumn('number', 'Ingresados en planta');\n                    data.addColumn('number', 'Ingresados en UCI');\n                    var monthYearFormatter = new google.visualization.DateFormat({\n                        pattern: \"dd-MM-yyy\"\n                    });\n                }\n\n                for (let element of dataJson.byDate) {\n                    if (element.date > '2020-04-25T22:00:00Z') {\n                        data.addRow([new Date(element.date), element.hospitalAdmissionsWithPCRCount, element.icuPeopleCount]);\n                    }\n                }\n                monthYearFormatter.format(data, 0);\n                var table = new google.visualization.Table(document.getElementById('table_div'));\n                table.draw(data, { showRowNumber: true, sortColumn: 0, sortAscending: false, width: '100%', height: '100%' });\n\n            }\n        }\n    });\n    getJSON(DATAFILES.BYHOSPITAL, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n            document.getElementById(\"fechaActualizacionHospitales\").innerHTML += updated(dataJson.byDate[dataJson.byDate.length - 1].date);\n            /*\n                        google.charts.load('current', { 'packages': ['line'] });\n                        google.charts.setOnLoadCallback(drawChart);\n            \n                        function drawChart() {\n            \n                            var data = new google.visualization.DataTable();\n                            if (window.location.href.indexOf(\"/eu/\") > -1) {\n                                data.addColumn('date', 'Data');\n                                data.addColumn('number', 'Plantan ingresatutako pazienteak');\n                                data.addColumn('number', 'ZIUn ingresatutako pazienteak');\n                                data.addColumn('number', 'Osakidetzako ospitaletan hildakoak');\n                                var options = {\n                                    chart: {\n                                        title: 'Osakidetzako ospitaleetako egoera orokorra',\n                                        subtitle: 'Plantan eta ZIUn ingresatutako paziente eta hildakoen bilakaera.',\n                                    },\n                                    hAxis: { format: 'yy/M/d' },\n                                    width: 900,\n                                    height: 500\n                                };\n                            } else {\n                                data.addColumn('date', 'Fecha');\n                                data.addColumn('number', 'Pacientes ingresados en Planta');\n                                data.addColumn('number', 'Pacientes ingresados en UCI');\n                                data.addColumn('number', 'Fallecidos en hospitales de Osakidetza');\n                                var options = {\n                                    chart: {\n                                        title: 'Situación global en los hospitales de Osakidetza (Servicio Vasco de Salud)',\n                                        subtitle: 'Evolución de los pacientes ingresados en planta y UCI, así como de los fallecidos.',\n                                    },\n                                    hAxis: { format: 'd/M/yy' },\n                                    width: 900,\n                                    height: 500\n                                };\n                            }\n            \n                            for (let element of dataJson.byDate) {\n                                data.addRow([new Date(element.date), element.totals.floorPeopleCount, element.totals.icuPeopleCount, element.totals.deceasedPeopleCount]);\n                            }\n                            var chart = new google.charts.Line(document.getElementById('linechart_material8'));\n                            chart.draw(data, google.charts.Line.convertOptions(options));\n            \n                        }\n            */\n            google.charts.load('current', { 'packages': ['bar'] });\n            google.charts.setOnLoadCallback(drawStuff);\n\n            function drawStuff() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Ospitaleak');\n                    data.addColumn('number', 'Plantan ingresatuta');\n                    data.addColumn('number', 'ZIUn ingresatuta');\n                    for (let element of dataJson.byDate[dataJson.byDate.length - 1].byHospital) {\n                        data.addRow([element.hospital, element.floorPeopleCount, element.icuPeopleCount]);\n                    }\n                    var options = {\n                        width: 800,\n                        chart: {\n                            title: 'Osakidetzako ospitale bakoitzaren egoera',\n                            subtitle: 'Osakidetzako ospitale bakoitzean ZIUn eta plantan ingresatutako pazienteen egoera'\n                        },\n                        bars: 'horizontal',\n                        series: {\n                            0: { axis: 'Plantan ingresatuta' },\n                            1: { axis: 'ZIUn ingresatuta' }\n                        },\n                        axes: {\n                            x: {\n                                distance: { label: 'Pazienteak' }, // Bottom x-axis.\n                                brightness: { side: 'top', label: 'apparent magnitude' } // Top x-axis.\n                            }\n                        }\n                    };\n                } else {\n                    data.addColumn('string', 'Hospitales');\n                    data.addColumn('number', 'Ingresados planta');\n                    data.addColumn('number', 'Ingresados UCI');\n                    for (let element of dataJson.byDate[dataJson.byDate.length - 1].byHospital) {\n                        data.addRow([element.hospital, element.floorPeopleCount, element.icuPeopleCount]);\n                    }\n                    var options = {\n                        width: 800,\n                        chart: {\n                            title: 'Situación en cada uno de los hospitales de Osakidetza',\n                            subtitle: 'Pacientes ingresados en planta y en UCI en cada uno de los hospitales de Osakidetza (Servicio Vasco de Salud)'\n                        },\n                        bars: 'horizontal',\n                        series: {\n                            0: { axis: 'Ingresados en planta' },\n                            1: { axis: 'Ingresados en UCI' }\n                        },\n                        axes: {\n                            x: {\n                                distance: { label: 'Pacientes' }, // Bottom x-axis.\n                                brightness: { side: 'top', label: 'apparent magnitude' } // Top x-axis.\n                            }\n                        }\n                    };\n                }\n                var chart = new google.charts.Bar(document.getElementById('barchart_material'));\n                chart.draw(data, options);\n            };\n        }\n    });\n}"]}