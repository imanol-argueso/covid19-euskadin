{"version":3,"sources":["js/by-municipality-map.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","updated","jsonData","lastdate","Date","formattedlastdate","getDate","getMonth","getFullYear","window","err","dataJson","alert","document","getElementById","innerHTML","byDateByMunicipality","date","popupInfo","popupNoData","title","titleParagraph","location","href","indexOf","map","L","tileLayer","maxZoom","attribution","addTo","geojson_url","getColor","d","style","dataValue","fillColor","weight","dashArray","fillOpacity","legend","control","position","onAdd","div","DomUtil","create","grades","labels","i","length","geojsonLayer","addGeoLayer","data","geoJson","onEachFeature","feature","layer","objetoAFiltrar","items","positivos","filter","element","geoMunicipality","countyId","oid","properties","EUSTAT","bindPopup","NOMBRE_EUS","positiveBy100ThousandPeopleRate","setStyle","fitBounds","getBounds","info","_div","update","fetch","then","res","json","popupInfo2","popupNoData2","title2","titleParagraph2","map2","getColor2","style2","legend2","geojsonLayer2","addGeoLayer2","mortalityRate","info2","google","charts","load","setOnLoadCallback","drawSeriesChart","visualization","DataTable","addColumn","options","hAxis","vAxis","bubble","textStyle","fontSize","population","addRow","officialName","chart","BubbleChart","draw","drawTable","totalPositiveCount","totalDeceasedCount","table","Table","showRowNumber","sortColumn","sortAscending","width","height"],"mappings":"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","file":"by-municipality-map.87e2295d.js","sourceRoot":"..\\src\\covid19","sourcesContent":["//import { DATAFILES } from './config';\nconst DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\nDATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n//import { getJSON } from './getData.js';\nvar getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('get', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n        var status = xhr.status;\n        if (status == 200) {\n            callback(null, xhr.response);\n        } else {\n            callback(status);\n        }\n    };\n    xhr.send();\n};\nfunction updated(jsonData) {\n    let lastdate = new Date(jsonData);\n    let formattedlastdate = lastdate.getDate() + \"/\" + (lastdate.getMonth() + 1) + \"/\" + lastdate.getFullYear();\n    return formattedlastdate;\n}\nwindow.onload = function () {\n\n    getJSON(DATAFILES.BYMUNICIPALITY, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n\n            document.getElementById(\"fechaActualizacion\").innerHTML += updated(dataJson.byDateByMunicipality[0].date);\n\n            var popupInfo;\n            var popupNoData;\n            var title;\n            var titleParagraph;\n            if (window.location.href.indexOf(\"/eu/\") > -1) {\n                popupInfo = ' positibo 100.000 biztanleko';\n                popupNoData = 'Ez dago positiborik.';\n                title = 'Positiboak';\n                titleParagraph = 'Euskadiko udalerrietan duten 100.000 biztanleko positiboen tasa.';\n            } else {\n                popupInfo = ' positivos por 100.000 hab.';\n                popupNoData = 'No hay positivos.';\n                title = 'Positivos';\n                titleParagraph = 'Tasa de positivos por 100.000 habitantes en cada municipio.';\n            }\n\n            let map = L.map('map')\n            L.tileLayer('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n                maxZoom: 18,\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(map)\n            let geojson_url = \"../maps/municipios_latlon.json\";\n            function getColor(d) {\n                return d > 10000 ? '#800026' :\n                    d > 8000 ? '#BD0026' :\n                        d > 7000 ? '#E31A1C' :\n                            d > 6000 ? '#FC4E2A' :\n                                d > 5000 ? '#FD8D3C' :\n                                    d > 4000 ? '#FEB24C' :\n                                        d > 2000 ? '#FED976' :\n                                            d > 0 ? '#FFEDA0' :\n                                                'white'\n            }\n            function style(dataValue) {\n                return {\n                    fillColor: getColor(dataValue),\n                    weight: 1,\n                    dashArray: '3',\n                    fillOpacity: 0.7\n                };\n            }\n            //Leyenda con los rangos\n            var legend = L.control({ position: 'bottomright' });\n\n            legend.onAdd = function (map) {\n\n                var div = L.DomUtil.create('div', 'info legend'),\n                    grades = [0, 2000, 4000, 5000, 6000, 7000, 8000, 10000],\n                    labels = [];\n                for (var i = 0; i < grades.length; i++) {\n                    div.innerHTML +=\n                        '<i style=\"background:' + getColor(grades[i] + 1) + '\"></i> ' +\n                        grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');\n                }\n\n                return div;\n            };\n            legend.addTo(map);\n            var geojsonLayer;\n            let addGeoLayer = (data) => {\n                geojsonLayer = L.geoJson(data, {\n                    onEachFeature: function (feature, layer) {\n                        let objetoAFiltrar = dataJson.byDateByMunicipality[0].items;\n                        let positivos = objetoAFiltrar.filter(element => '' + element.geoMunicipality.countyId + element.geoMunicipality.oid === '' + feature.properties.EUSTAT);\n\n                        if (positivos.length !== 0) {\n                            layer.bindPopup(feature.properties.NOMBRE_EUS + ': ' + positivos[0].positiveBy100ThousandPeopleRate + popupInfo);\n                            layer.setStyle(style(positivos[0].positiveBy100ThousandPeopleRate));\n                        } else {\n                            layer.bindPopup(popupNoData);\n                            layer.setStyle(style(0));\n                        }\n                    },\n                }).addTo(map)\n                map.fitBounds(geojsonLayer.getBounds())\n            }\n\n            //Añadimos la capa de info\n            var info = L.control();\n\n            info.onAdd = function (map) {\n                this._div = L.DomUtil.create('div', 'info');\n                this.update();\n                return this._div;\n            };\n\n            info.update = function () {\n                this._div.innerHTML = '<h4>' + title + '</h4><p class=\"info_p\">' + titleParagraph + '</p>';\n            };\n            info.addTo(map);\n            fetch(\n                geojson_url\n            ).then(\n                res => res.json()\n            ).then(\n                data => addGeoLayer(data)\n            )\n\n            var popupInfo2;\n            var popupNoData2;\n            var title2;\n            var titleParagraph2;\n            if (window.location.href.indexOf(\"/eu/\") > -1) {\n                popupInfo2 = '(%)-eko hilgarritasuna';\n                popupNoData2 = 'Ez dago daturik.';\n                title2 = 'Hilgarritasuna';\n                titleParagraph2 = 'Pandemiaren hasieratik Euskadiko udalerrietan izandako hilgarritasuna.';\n            } else {\n                popupInfo2 = '% de letalidad';\n                popupNoData2 = 'No hay datos.';\n                title2 = 'Letalidad';\n                titleParagraph2 = 'Letalidad en los municipios de Euskadi desde el inicio de la pandemia.';\n            }\n\n            let map2 = L.map('map2')\n            L.tileLayer('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n                maxZoom: 18,\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(map2)\n            //let geojson_url2 = \"./maps/municipios_latlon.json\";\n            function getColor2(d) {\n                return d > 8 ? '#800026' :\n                    d > 6 ? '#BD0026' :\n                        d > 4 ? '#E31A1C' :\n                            d > 3 ? '#FC4E2A' :\n                                d > 2 ? '#FD8D3C' :\n                                    d > 1 ? '#FEB24C' :\n                                        d > 0.5 ? '#FED976' :\n                                            d > 0 ? '#FFEDA0' :\n                                                '#f6efd0'\n            }\n            function style2(dataValue) {\n                return {\n                    fillColor: getColor2(dataValue),\n                    weight: 1,\n                    dashArray: '3',\n                    fillOpacity: 0.7\n                };\n            }\n            //Leyenda con los rangos\n            var legend2 = L.control({ position: 'bottomright' });\n\n            legend2.onAdd = function (map2) {\n\n                var div = L.DomUtil.create('div', 'info legend'),\n                    grades = [0, 0.5, 1, 2, 3, 4, 6, 8],\n                    labels = [];\n                for (var i = 0; i < grades.length; i++) {\n                    div.innerHTML +=\n                        '<i style=\"background:' + getColor2(grades[i] + 1) + '\"></i> ' +\n                        grades[i] + (grades[i + 1] ? '%&ndash;' + grades[i + 1] + '%<br>' : '% +');\n                }\n\n                return div;\n            };\n            legend2.addTo(map2);\n            var geojsonLayer2;\n            let addGeoLayer2 = (data) => {\n                geojsonLayer2 = L.geoJson(data, {\n                    onEachFeature: function (feature, layer) {\n                        let objetoAFiltrar = dataJson.byDateByMunicipality[0].items;\n                        let positivos = objetoAFiltrar.filter(element => '' + element.geoMunicipality.countyId + element.geoMunicipality.oid === '' + feature.properties.EUSTAT);\n\n                        if (positivos.length !== 0) {\n                            layer.bindPopup(feature.properties.NOMBRE_EUS + ': ' + positivos[0].mortalityRate + popupInfo2);\n                            layer.setStyle(style2(positivos[0].mortalityRate));\n                        } else {\n                            layer.bindPopup(popupNoData2);\n                            layer.setStyle(style2(0));\n                        }\n                    },\n                }).addTo(map2)\n                map2.fitBounds(geojsonLayer2.getBounds())\n            }\n\n            //Añadimos la capa de info\n            var info2 = L.control();\n\n            info2.onAdd = function (map2) {\n                this._div = L.DomUtil.create('div', 'info');\n                this.update();\n                return this._div;\n            };\n\n            info2.update = function () {\n                this._div.innerHTML = '<h4>' + title2 + '</h4><p class=\"info_p\">' + titleParagraph2 + '</p>';\n            };\n            info2.addTo(map2);\n            fetch(\n                geojson_url\n            ).then(\n                res => res.json()\n            ).then(\n                data => addGeoLayer2(data)\n            )\n\n\n\n\n            google.charts.load('current', { 'packages': ['corechart'] });\n            google.charts.setOnLoadCallback(drawSeriesChart);\n\n            function drawSeriesChart() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Udalerria');\n                    data.addColumn('number', 'Positiboen tasa');\n                    data.addColumn('number', 'Hilgarritasuna');\n                    data.addColumn('number', 'Biztanleak');\n                    var options = {\n                        title: '20.000 biztanle baino gehiago dituzten udalerrien positibo (100.000 biztanleko tasa) eta hilgarritasunaren arteko korrelazioa.',\n                        hAxis: { title: 'Positiboak (100.000 biztanleko tasa)' },\n                        vAxis: { title: 'Hilgarritasuna' },\n                        bubble: { textStyle: { fontSize: 11 } }\n                    };\n                } else {\n                    data.addColumn('string', 'Municipio');\n                    data.addColumn('number', 'Tasa de positivos');\n                    data.addColumn('number', 'Letalidad');\n                    data.addColumn('number', 'Poblacion');\n                    var options = {\n                        title: 'Correlación entre positivos (tasa por 100.000 hab.) y la letalidad en los municipios de más de 20.000 habitantes de Euskadi.',\n                        hAxis: { title: 'Positivos (tasa por 100.000 hab.)' },\n                        vAxis: { title: 'Letalidad' },\n                        bubble: { textStyle: { fontSize: 11 } }\n                    };\n                }\n                for (let element of dataJson.byDateByMunicipality[0].items) {\n                    if (element.population > 20000) {\n                        data.addRow([element.geoMunicipality.officialName, element.positiveBy100ThousandPeopleRate, element.mortalityRate, element.population]);\n                    }\n                }\n                var chart = new google.visualization.BubbleChart(document.getElementById('series_chart_div2'));\n                chart.draw(data, options);\n            }\n\n            google.charts.load('current', { 'packages': ['table'] });\n            google.charts.setOnLoadCallback(drawTable);\n            function drawTable() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Udalerria');\n                    data.addColumn('number', 'Populazioa');\n                    data.addColumn('number', 'Positiboak');\n                    data.addColumn('number', 'Positiboen tasa 100.000 biz.');\n                    data.addColumn('number', 'Hildakoak');\n                    data.addColumn('number', 'Hilgarritasuna');\n                } else {\n                    data.addColumn('string', 'Municipio');\n                    data.addColumn('number', 'Poblacion');\n                    data.addColumn('number', 'Positivos');\n                    data.addColumn('number', 'Tasa de positivos 100.000 hab.');\n                    data.addColumn('number', 'Fallecidos');\n                    data.addColumn('number', 'Letalidad');\n                }\n                for (let element of dataJson.byDateByMunicipality[0].items) {\n                    data.addRow([element.geoMunicipality.officialName, element.population, element.totalPositiveCount, element.positiveBy100ThousandPeopleRate, element.totalDeceasedCount, element.mortalityRate]);\n                }\n                var table = new google.visualization.Table(document.getElementById('table_div9'));\n                table.draw(data, { showRowNumber: true, sortColumn: 2, sortAscending: false, width: '100%', height: 'auto' });\n            }\n        }\n    });\n}"]}