{"version":3,"sources":["js/by-health-zone-map.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","updated","jsonData","lastdate","Date","formattedlastdate","getDate","getMonth","getFullYear","window","err","dataJson","alert","document","getElementById","innerHTML","dataByDateByHealthZone","date","popupInfo","popupNoData","title","titleParagraph","location","href","indexOf","map","L","tileLayer","maxZoom","attribution","addTo","geojson_url","getColor","d","style","dataValue","fillColor","weight","dashArray","fillOpacity","legend","control","position","onAdd","div","DomUtil","create","grades","labels","i","length","geojsonLayer","addGeoLayer","data","geoJson","onEachFeature","feature","layer","objetoAFiltrar","items","positivos","filter","element","healthZone","healthZoneId","properties","ZON_Cod","bindPopup","ZONA_Nom","positiveBy100ThousandPeopleRate","setStyle","fitBounds","getBounds","info","_div","update","fetch","then","res","json","popupInfo2","popupNoData2","title2","titleParagraph2","map2","getColor2","style2","legend2","geojsonLayer2","addGeoLayer2","mortalityRate","info2","google","charts","load","setOnLoadCallback","drawSeriesChart","visualization","DataTable","addColumn","options","hAxis","vAxis","bubble","textStyle","fontSize","addRow","name","tisCount","chart","BubbleChart","draw","drawTable","totalPositiveCount","totalDeceasedCount","table","Table","showRowNumber","sortColumn","sortAscending","width","height"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,gGAApB;AACAC,SAAS,GAAG;AACRC,EAAAA,cAAc,EAAG,GAAEF,WAAY,+BADvB;AAERG,EAAAA,GAAG,EAAG,GAAEH,WAAY,mBAFZ;AAGRI,EAAAA,mBAAmB,EAAG,GAAEJ,WAAY,mCAH5B;AAIRK,EAAAA,KAAK,EAAG,GAAEL,WAAY,qBAJd;AAKRM,EAAAA,YAAY,EAAG,GAAEN,WAAY,4BALrB;AAMRO,EAAAA,cAAc,EAAG,GAAEP,WAAY,8BANvB;AAORQ,EAAAA,UAAU,EAAG,GAAER,WAAY;AAPnB,CAAZ,EASA;;AACA,IAAIS,OAAO,GAAG,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AACnC,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBJ,GAAhB,EAAqB,IAArB;AACAE,EAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;;AACAH,EAAAA,GAAG,CAACI,MAAJ,GAAa,YAAY;AACrB,QAAIC,MAAM,GAAGL,GAAG,CAACK,MAAjB;;AACA,QAAIA,MAAM,IAAI,GAAd,EAAmB;AACfN,MAAAA,QAAQ,CAAC,IAAD,EAAOC,GAAG,CAACM,QAAX,CAAR;AACH,KAFD,MAEO;AACHP,MAAAA,QAAQ,CAACM,MAAD,CAAR;AACH;AACJ,GAPD;;AAQAL,EAAAA,GAAG,CAACO,IAAJ;AACH,CAbD;;AAcA,SAASC,OAAT,CAAiBC,QAAjB,EAA2B;AACvB,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAf;AACA,MAAIG,iBAAiB,GAAGF,QAAQ,CAACG,OAAT,KAAqB,GAArB,IAA4BH,QAAQ,CAACI,QAAT,KAAsB,CAAlD,IAAuD,GAAvD,GAA6DJ,QAAQ,CAACK,WAAT,EAArF;AACA,SAAOH,iBAAP;AACH;;AACDI,MAAM,CAACZ,MAAP,GAAgB,YAAY;AAExBP,EAAAA,OAAO,CAACR,SAAS,CAACK,YAAX,EAAyB,UAAUuB,GAAV,EAAeC,QAAf,EAAyB;AACrD,QAAID,GAAG,IAAI,IAAX,EAAiB;AACbE,MAAAA,KAAK,CAAC,2BAA2BF,GAA5B,CAAL;AACH,KAFD,MAEO;AAEHG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,SAA9C,IAA2Dd,OAAO,CAACU,QAAQ,CAACK,sBAAT,CAAgC,CAAhC,EAAmCC,IAApC,CAAlE;AAEA,UAAIC,SAAJ;AACA,UAAIC,WAAJ;AACA,UAAIC,KAAJ;AACA,UAAIC,cAAJ;;AACA,UAAIZ,MAAM,CAACa,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,MAA7B,IAAuC,CAAC,CAA5C,EAA+C;AAC3CN,QAAAA,SAAS,GAAG,8BAAZ;AACAC,QAAAA,WAAW,GAAG,sBAAd;AACAC,QAAAA,KAAK,GAAG,YAAR;AACAC,QAAAA,cAAc,GAAG,sEAAjB;AACH,OALD,MAKO;AACHH,QAAAA,SAAS,GAAG,6BAAZ;AACAC,QAAAA,WAAW,GAAG,mBAAd;AACAC,QAAAA,KAAK,GAAG,WAAR;AACAC,QAAAA,cAAc,GAAG,iEAAjB;AACH;;AAED,UAAII,GAAG,GAAGC,CAAC,CAACD,GAAF,CAAM,KAAN,CAAV;AACAC,MAAAA,CAAC,CAACC,SAAF,CAAY,+DAAZ,EAA6E;AACzEC,QAAAA,OAAO,EAAE,EADgE;AAEzEC,QAAAA,WAAW,EAAE;AAF4D,OAA7E,EAGGC,KAHH,CAGSL,GAHT;AAIA,UAAIM,WAAW,GAAG,yCAAlB;;AACA,eAASC,QAAT,CAAkBC,CAAlB,EAAqB;AACjB,eAAOA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACHA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACIA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACIA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACIA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACIA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACIA,CAAC,GAAG,IAAJ,GAAW,SAAX,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACI,OARhC;AASH;;AACD,eAASC,KAAT,CAAeC,SAAf,EAA0B;AACtB,eAAO;AACHC,UAAAA,SAAS,EAAEJ,QAAQ,CAACG,SAAD,CADhB;AAEHE,UAAAA,MAAM,EAAE,CAFL;AAGHC,UAAAA,SAAS,EAAE,GAHR;AAIHC,UAAAA,WAAW,EAAE;AAJV,SAAP;AAMH,OA5CE,CA6CH;;;AACA,UAAIC,MAAM,GAAGd,CAAC,CAACe,OAAF,CAAU;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV,CAAb;;AAEAF,MAAAA,MAAM,CAACG,KAAP,GAAe,UAAUlB,GAAV,EAAe;AAE1B,YAAImB,GAAG,GAAGlB,CAAC,CAACmB,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAV;AAAA,YACIC,MAAM,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,CADb;AAAA,YAEIC,MAAM,GAAG,EAFb;;AAGA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCL,UAAAA,GAAG,CAAC7B,SAAJ,IACI,0BAA0BiB,QAAQ,CAACe,MAAM,CAACE,CAAD,CAAN,GAAY,CAAb,CAAlC,GAAoD,SAApD,GACAF,MAAM,CAACE,CAAD,CADN,IACaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,GAAgB,YAAYF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAlB,GAA4B,MAA5C,GAAqD,GADlE,CADJ;AAGH;;AAED,eAAOL,GAAP;AACH,OAZD;;AAaAJ,MAAAA,MAAM,CAACV,KAAP,CAAaL,GAAb;AACA,UAAI0B,YAAJ;;AACA,UAAIC,WAAW,GAAIC,IAAD,IAAU;AACxBF,QAAAA,YAAY,GAAGzB,CAAC,CAAC4B,OAAF,CAAUD,IAAV,EAAgB;AAC3BE,UAAAA,aAAa,EAAE,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACrC,gBAAIC,cAAc,GAAG/C,QAAQ,CAACK,sBAAT,CAAgC,CAAhC,EAAmC2C,KAAxD;AACA,gBAAIC,SAAS,GAAGF,cAAc,CAACG,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,UAAR,CAAmBC,YAAnB,KAAoCR,OAAO,CAACS,UAAR,CAAmBC,OAAxF,CAAhB;;AAEA,gBAAIN,SAAS,CAACV,MAAV,KAAqB,CAAzB,EAA4B;AACxBO,cAAAA,KAAK,CAACU,SAAN,CAAgBX,OAAO,CAACS,UAAR,CAAmBG,QAAnB,GAA8B,IAA9B,GAAqCR,SAAS,CAAC,CAAD,CAAT,CAAaS,+BAAlD,GAAoFnD,SAApG;AACAuC,cAAAA,KAAK,CAACa,QAAN,CAAepC,KAAK,CAAC0B,SAAS,CAAC,CAAD,CAAT,CAAaS,+BAAd,CAApB;AACH,aAHD,MAGO;AACHZ,cAAAA,KAAK,CAACU,SAAN,CAAgBhD,WAAhB;AACAsC,cAAAA,KAAK,CAACa,QAAN,CAAepC,KAAK,CAAC,CAAD,CAApB;AACH;AACJ;AAZ0B,SAAhB,EAaZJ,KAbY,CAaNL,GAbM,CAAf;AAcAA,QAAAA,GAAG,CAAC8C,SAAJ,CAAcpB,YAAY,CAACqB,SAAb,EAAd;AACH,OAhBD,CA/DG,CAiFH;;;AACA,UAAIC,IAAI,GAAG/C,CAAC,CAACe,OAAF,EAAX;;AAEAgC,MAAAA,IAAI,CAAC9B,KAAL,GAAa,UAAUlB,GAAV,EAAe;AACxB,aAAKiD,IAAL,GAAYhD,CAAC,CAACmB,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,MAAxB,CAAZ;AACA,aAAK6B,MAAL;AACA,eAAO,KAAKD,IAAZ;AACH,OAJD;;AAMAD,MAAAA,IAAI,CAACE,MAAL,GAAc,YAAY;AACtB,aAAKD,IAAL,CAAU3D,SAAV,GAAsB,SAASK,KAAT,GAAiB,yBAAjB,GAA6CC,cAA7C,GAA8D,MAApF;AACH,OAFD;;AAGAoD,MAAAA,IAAI,CAAC3C,KAAL,CAAWL,GAAX;AACAmD,MAAAA,KAAK,CACD7C,WADC,CAAL,CAEE8C,IAFF,CAGIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHX,EAIEF,IAJF,CAKIxB,IAAI,IAAID,WAAW,CAACC,IAAD,CALvB;AASA,UAAI2B,UAAJ;AACA,UAAIC,YAAJ;AACA,UAAIC,MAAJ;AACA,UAAIC,eAAJ;;AACA,UAAI1E,MAAM,CAACa,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,MAA7B,IAAuC,CAAC,CAA5C,EAA+C;AAC3CwD,QAAAA,UAAU,GAAG,wBAAb;AACAC,QAAAA,YAAY,GAAG,kBAAf;AACAC,QAAAA,MAAM,GAAG,gBAAT;AACAC,QAAAA,eAAe,GAAG,4EAAlB;AACH,OALD,MAKO;AACHH,QAAAA,UAAU,GAAG,gBAAb;AACAC,QAAAA,YAAY,GAAG,eAAf;AACAC,QAAAA,MAAM,GAAG,WAAT;AACAC,QAAAA,eAAe,GAAG,4EAAlB;AACH;;AAED,UAAIC,IAAI,GAAG1D,CAAC,CAACD,GAAF,CAAM,MAAN,CAAX;AACAC,MAAAA,CAAC,CAACC,SAAF,CAAY,+DAAZ,EAA6E;AACzEC,QAAAA,OAAO,EAAE,EADgE;AAEzEC,QAAAA,WAAW,EAAE;AAF4D,OAA7E,EAGGC,KAHH,CAGSsD,IAHT,EAxHG,CA4HH;;AACA,eAASC,SAAT,CAAmBpD,CAAnB,EAAsB;AAClB,eAAOA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACHA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACIA,CAAC,GAAG,CAAJ,GAAQ,SAAR,GACI,OARhC;AASH;;AACD,eAASqD,MAAT,CAAgBnD,SAAhB,EAA2B;AACvB,eAAO;AACHC,UAAAA,SAAS,EAAEiD,SAAS,CAAClD,SAAD,CADjB;AAEHE,UAAAA,MAAM,EAAE,CAFL;AAGHC,UAAAA,SAAS,EAAE,GAHR;AAIHC,UAAAA,WAAW,EAAE;AAJV,SAAP;AAMH,OA/IE,CAgJH;;;AACA,UAAIgD,OAAO,GAAG7D,CAAC,CAACe,OAAF,CAAU;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV,CAAd;;AAEA6C,MAAAA,OAAO,CAAC5C,KAAR,GAAgB,UAAUyC,IAAV,EAAgB;AAE5B,YAAIxC,GAAG,GAAGlB,CAAC,CAACmB,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAV;AAAA,YACIC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CADb;AAAA,YAEIC,MAAM,GAAG,EAFb;;AAGA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCL,UAAAA,GAAG,CAAC7B,SAAJ,IACI,0BAA0BsE,SAAS,CAACtC,MAAM,CAACE,CAAD,CAAN,GAAY,CAAb,CAAnC,GAAqD,SAArD,GACAF,MAAM,CAACE,CAAD,CADN,IACaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAN,GAAgB,aAAaF,MAAM,CAACE,CAAC,GAAG,CAAL,CAAnB,GAA6B,OAA7C,GAAuD,KADpE,CADJ;AAGH;;AAED,eAAOL,GAAP;AACH,OAZD;;AAaA2C,MAAAA,OAAO,CAACzD,KAAR,CAAcsD,IAAd;AACA,UAAII,aAAJ;;AACA,UAAIC,YAAY,GAAIpC,IAAD,IAAU;AACzBmC,QAAAA,aAAa,GAAG9D,CAAC,CAAC4B,OAAF,CAAUD,IAAV,EAAgB;AAC5BE,UAAAA,aAAa,EAAE,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACrC,gBAAIC,cAAc,GAAG/C,QAAQ,CAACK,sBAAT,CAAgC,CAAhC,EAAmC2C,KAAxD;AACA,gBAAIC,SAAS,GAAGF,cAAc,CAACG,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,UAAR,CAAmBC,YAAnB,KAAoCR,OAAO,CAACS,UAAR,CAAmBC,OAAxF,CAAhB;;AAEA,gBAAIN,SAAS,CAACV,MAAV,KAAqB,CAAzB,EAA4B;AACxBO,cAAAA,KAAK,CAACU,SAAN,CAAgBX,OAAO,CAACS,UAAR,CAAmBG,QAAnB,GAA8B,IAA9B,GAAqCR,SAAS,CAAC,CAAD,CAAT,CAAa8B,aAAlD,GAAkEV,UAAlF;AACAvB,cAAAA,KAAK,CAACa,QAAN,CAAegB,MAAM,CAAC1B,SAAS,CAAC,CAAD,CAAT,CAAa8B,aAAd,CAArB;AACH,aAHD,MAGO;AACHjC,cAAAA,KAAK,CAACU,SAAN,CAAgBc,YAAhB;AACAxB,cAAAA,KAAK,CAACa,QAAN,CAAegB,MAAM,CAAC,CAAD,CAArB;AACH;AACJ;AAZ2B,SAAhB,EAabxD,KAba,CAaPsD,IAbO,CAAhB;AAcAA,QAAAA,IAAI,CAACb,SAAL,CAAeiB,aAAa,CAAChB,SAAd,EAAf;AACH,OAhBD,CAlKG,CAoLH;;;AACA,UAAImB,KAAK,GAAGjE,CAAC,CAACe,OAAF,EAAZ;;AAEAkD,MAAAA,KAAK,CAAChD,KAAN,GAAc,UAAUyC,IAAV,EAAgB;AAC1B,aAAKV,IAAL,GAAYhD,CAAC,CAACmB,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,MAAxB,CAAZ;AACA,aAAK6B,MAAL;AACA,eAAO,KAAKD,IAAZ;AACH,OAJD;;AAMAiB,MAAAA,KAAK,CAAChB,MAAN,GAAe,YAAY;AACvB,aAAKD,IAAL,CAAU3D,SAAV,GAAsB,SAASmE,MAAT,GAAkB,yBAAlB,GAA8CC,eAA9C,GAAgE,MAAtF;AACH,OAFD;;AAGAQ,MAAAA,KAAK,CAAC7D,KAAN,CAAYsD,IAAZ;AACAR,MAAAA,KAAK,CACD7C,WADC,CAAL,CAEE8C,IAFF,CAGIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHX,EAIEF,IAJF,CAKIxB,IAAI,IAAIoC,YAAY,CAACpC,IAAD,CALxB;AASAuC,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,WAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,eAAhC;;AAEA,eAASA,eAAT,GAA2B;AACvB,YAAI3C,IAAI,GAAG,IAAIuC,MAAM,CAACK,aAAP,CAAqBC,SAAzB,EAAX;;AACA,YAAIzF,MAAM,CAACa,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,MAA7B,IAAuC,CAAC,CAA5C,EAA+C;AAC3C6B,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,eAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,iBAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,gBAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,4BAAzB;AACA,cAAIC,OAAO,GAAG;AACVhF,YAAAA,KAAK,EAAE,kLADG;AAEViF,YAAAA,KAAK,EAAE;AAAEjF,cAAAA,KAAK,EAAE;AAAT,aAFG;AAGVkF,YAAAA,KAAK,EAAE;AAAElF,cAAAA,KAAK,EAAE;AAAT,aAHG;AAIVmF,YAAAA,MAAM,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ;AAAb;AAJE,WAAd;AAMH,SAXD,MAWO;AACHpD,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,eAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,mBAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,WAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,0BAAzB;AACA,cAAIC,OAAO,GAAG;AACVhF,YAAAA,KAAK,EAAE,uKADG;AAEViF,YAAAA,KAAK,EAAE;AAAEjF,cAAAA,KAAK,EAAE;AAAT,aAFG;AAGVkF,YAAAA,KAAK,EAAE;AAAElF,cAAAA,KAAK,EAAE;AAAT,aAHG;AAIVmF,YAAAA,MAAM,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ;AAAb;AAJE,WAAd;AAMH;;AACD,aAAK,IAAI3C,OAAT,IAAoBnD,QAAQ,CAACK,sBAAT,CAAgC,CAAhC,EAAmC2C,KAAvD,EAA8D;AAC1D,cAAIG,OAAO,CAAC4B,aAAR,GAAwB,CAA5B,EAA+B;AAC3BrC,YAAAA,IAAI,CAACqD,MAAL,CAAY,CAAC5C,OAAO,CAACC,UAAR,CAAmB4C,IAApB,EAA0B7C,OAAO,CAACO,+BAAlC,EAAmEP,OAAO,CAAC4B,aAA3E,EAA0F5B,OAAO,CAAC8C,QAAlG,CAAZ;AACH;AACJ;;AACD,YAAIC,KAAK,GAAG,IAAIjB,MAAM,CAACK,aAAP,CAAqBa,WAAzB,CAAqCjG,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAArC,CAAZ;AACA+F,QAAAA,KAAK,CAACE,IAAN,CAAW1D,IAAX,EAAiB+C,OAAjB;AACH;;AAEDR,MAAAA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;AAAE,oBAAY,CAAC,OAAD;AAAd,OAA9B;AACAF,MAAAA,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCiB,SAAhC;;AACA,eAASA,SAAT,GAAqB;AACjB,YAAI3D,IAAI,GAAG,IAAIuC,MAAM,CAACK,aAAP,CAAqBC,SAAzB,EAAX;;AACA,YAAIzF,MAAM,CAACa,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,MAA7B,IAAuC,CAAC,CAA5C,EAA+C;AAC3C6B,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,eAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,eAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,YAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,8BAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,WAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,gBAAzB;AACH,SAPD,MAOO;AACH9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,eAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,WAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,WAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,gCAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,YAAzB;AACA9C,UAAAA,IAAI,CAAC8C,SAAL,CAAe,QAAf,EAAyB,WAAzB;AACH;;AACD,aAAK,IAAIrC,OAAT,IAAoBnD,QAAQ,CAACK,sBAAT,CAAgC,CAAhC,EAAmC2C,KAAvD,EAA8D;AAC1DN,UAAAA,IAAI,CAACqD,MAAL,CAAY,CAAC5C,OAAO,CAACC,UAAR,CAAmB4C,IAApB,EAA0B7C,OAAO,CAAC8C,QAAlC,EAA4C9C,OAAO,CAACmD,kBAApD,EAAwEnD,OAAO,CAACO,+BAAhF,EAAiHP,OAAO,CAACoD,kBAAzH,EAA6IpD,OAAO,CAAC4B,aAArJ,CAAZ;AACH;;AACD,YAAIyB,KAAK,GAAG,IAAIvB,MAAM,CAACK,aAAP,CAAqBmB,KAAzB,CAA+BvG,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAA/B,CAAZ;AACAqG,QAAAA,KAAK,CAACJ,IAAN,CAAW1D,IAAX,EAAiB;AAAEgE,UAAAA,aAAa,EAAE,IAAjB;AAAuBC,UAAAA,UAAU,EAAE,CAAnC;AAAsCC,UAAAA,aAAa,EAAE,KAArD;AAA4DC,UAAAA,KAAK,EAAE,MAAnE;AAA2EC,UAAAA,MAAM,EAAE;AAAnF,SAAjB;AACH;AACJ;AACJ,GA5QM,CAAP;AA6QH,CA/QD","file":"by-health-zone-map.13cbf1d0.js","sourceRoot":"..\\src\\covid19","sourcesContent":["//import { DATAFILES } from './config';\nconst DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\nDATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n//import { getJSON } from './getData.js';\nvar getJSON = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('get', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n        var status = xhr.status;\n        if (status == 200) {\n            callback(null, xhr.response);\n        } else {\n            callback(status);\n        }\n    };\n    xhr.send();\n};\nfunction updated(jsonData) {\n    let lastdate = new Date(jsonData);\n    let formattedlastdate = lastdate.getDate() + \"/\" + (lastdate.getMonth() + 1) + \"/\" + lastdate.getFullYear();\n    return formattedlastdate;\n}\nwindow.onload = function () {\n\n    getJSON(DATAFILES.BYHEALTHZONE, function (err, dataJson) {\n        if (err != null) {\n            alert('Something went wrong: ' + err);\n        } else {\n\n            document.getElementById(\"fechaActualizacion\").innerHTML += updated(dataJson.dataByDateByHealthZone[0].date);\n\n            var popupInfo;\n            var popupNoData;\n            var title;\n            var titleParagraph;\n            if (window.location.href.indexOf(\"/eu/\") > -1) {\n                popupInfo = ' positibo 100.000 biztanleko';\n                popupNoData = 'Ez dago positiborik.';\n                title = 'Positiboak';\n                titleParagraph = 'Euskadiko osasun eremuetan duten 100.000 biztanleko positiboen tasa.';\n            } else {\n                popupInfo = ' positivos por 100.000 hab.';\n                popupNoData = 'No hay positivos.';\n                title = 'Positivos';\n                titleParagraph = 'Tasa de positivos por 100.000 habitantes en cada zona de salud.';\n            }\n\n            let map = L.map('map')\n            L.tileLayer('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n                maxZoom: 18,\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(map)\n            let geojson_url = \"../maps/osasun_eremuak_2018_latlon.json\";\n            function getColor(d) {\n                return d > 9000 ? '#800026' :\n                    d > 8000 ? '#BD0026' :\n                        d > 7000 ? '#E31A1C' :\n                            d > 6000 ? '#FC4E2A' :\n                                d > 5000 ? '#FD8D3C' :\n                                    d > 4000 ? '#FEB24C' :\n                                        d > 2000 ? '#FED976' :\n                                            d > 0 ? '#FFEDA0' :\n                                                'white'\n            }\n            function style(dataValue) {\n                return {\n                    fillColor: getColor(dataValue),\n                    weight: 1,\n                    dashArray: '3',\n                    fillOpacity: 0.7\n                };\n            }\n            //Leyenda con los rangos\n            var legend = L.control({ position: 'bottomright' });\n\n            legend.onAdd = function (map) {\n\n                var div = L.DomUtil.create('div', 'info legend'),\n                    grades = [0, 2000, 4000, 5000, 6000, 7000, 8000, 9000],\n                    labels = [];\n                for (var i = 0; i < grades.length; i++) {\n                    div.innerHTML +=\n                        '<i style=\"background:' + getColor(grades[i] + 1) + '\"></i> ' +\n                        grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');\n                }\n\n                return div;\n            };\n            legend.addTo(map);\n            var geojsonLayer;\n            let addGeoLayer = (data) => {\n                geojsonLayer = L.geoJson(data, {\n                    onEachFeature: function (feature, layer) {\n                        let objetoAFiltrar = dataJson.dataByDateByHealthZone[0].items;\n                        let positivos = objetoAFiltrar.filter(element => element.healthZone.healthZoneId === feature.properties.ZON_Cod);\n\n                        if (positivos.length !== 0) {\n                            layer.bindPopup(feature.properties.ZONA_Nom + ': ' + positivos[0].positiveBy100ThousandPeopleRate + popupInfo);\n                            layer.setStyle(style(positivos[0].positiveBy100ThousandPeopleRate));\n                        } else {\n                            layer.bindPopup(popupNoData);\n                            layer.setStyle(style(0));\n                        }\n                    },\n                }).addTo(map)\n                map.fitBounds(geojsonLayer.getBounds())\n            }\n\n            //Añadimos la capa de info\n            var info = L.control();\n\n            info.onAdd = function (map) {\n                this._div = L.DomUtil.create('div', 'info');\n                this.update();\n                return this._div;\n            };\n\n            info.update = function () {\n                this._div.innerHTML = '<h4>' + title + '</h4><p class=\"info_p\">' + titleParagraph + '</p>';\n            };\n            info.addTo(map);\n            fetch(\n                geojson_url\n            ).then(\n                res => res.json()\n            ).then(\n                data => addGeoLayer(data)\n            )\n\n\n            var popupInfo2;\n            var popupNoData2;\n            var title2;\n            var titleParagraph2;\n            if (window.location.href.indexOf(\"/eu/\") > -1) {\n                popupInfo2 = '(%)-eko hilgarritasuna';\n                popupNoData2 = 'Ez dago daturik.';\n                title2 = 'Hilgarritasuna';\n                titleParagraph2 = 'Pandemiaren hasieratik Euskadiko osasun eremuetan izandako hilgarritasuna.';\n            } else {\n                popupInfo2 = '% de letalidad';\n                popupNoData2 = 'No hay datos.';\n                title2 = 'Letalidad';\n                titleParagraph2 = 'Letalidad en las zonas de salud de Euskadi desde el inicio de la pandemia.';\n            }\n\n            let map2 = L.map('map2')\n            L.tileLayer('https://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png', {\n                maxZoom: 18,\n                attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(map2)\n            //let geojson_url2 = \"./maps/osasun_eremuak_2018_latlon.json\";\n            function getColor2(d) {\n                return d > 7 ? '#800026' :\n                    d > 6 ? '#BD0026' :\n                        d > 5 ? '#E31A1C' :\n                            d > 4 ? '#FC4E2A' :\n                                d > 3 ? '#FD8D3C' :\n                                    d > 2 ? '#FEB24C' :\n                                        d > 1 ? '#FED976' :\n                                            d > 0 ? '#FFEDA0' :\n                                                'white'\n            }\n            function style2(dataValue) {\n                return {\n                    fillColor: getColor2(dataValue),\n                    weight: 1,\n                    dashArray: '3',\n                    fillOpacity: 0.7\n                };\n            }\n            //Leyenda con los rangos\n            var legend2 = L.control({ position: 'bottomright' });\n\n            legend2.onAdd = function (map2) {\n\n                var div = L.DomUtil.create('div', 'info legend'),\n                    grades = [0, 1, 2, 3, 4, 5, 6, 7],\n                    labels = [];\n                for (var i = 0; i < grades.length; i++) {\n                    div.innerHTML +=\n                        '<i style=\"background:' + getColor2(grades[i] + 1) + '\"></i> ' +\n                        grades[i] + (grades[i + 1] ? '%&ndash;' + grades[i + 1] + '%<br>' : '% +');\n                }\n\n                return div;\n            };\n            legend2.addTo(map2);\n            var geojsonLayer2;\n            let addGeoLayer2 = (data) => {\n                geojsonLayer2 = L.geoJson(data, {\n                    onEachFeature: function (feature, layer) {\n                        let objetoAFiltrar = dataJson.dataByDateByHealthZone[0].items;\n                        let positivos = objetoAFiltrar.filter(element => element.healthZone.healthZoneId === feature.properties.ZON_Cod);\n\n                        if (positivos.length !== 0) {\n                            layer.bindPopup(feature.properties.ZONA_Nom + ': ' + positivos[0].mortalityRate + popupInfo2);\n                            layer.setStyle(style2(positivos[0].mortalityRate));\n                        } else {\n                            layer.bindPopup(popupNoData2);\n                            layer.setStyle(style2(0));\n                        }\n                    },\n                }).addTo(map2)\n                map2.fitBounds(geojsonLayer2.getBounds())\n            }\n\n            //Añadimos la capa de info\n            var info2 = L.control();\n\n            info2.onAdd = function (map2) {\n                this._div = L.DomUtil.create('div', 'info');\n                this.update();\n                return this._div;\n            };\n\n            info2.update = function () {\n                this._div.innerHTML = '<h4>' + title2 + '</h4><p class=\"info_p\">' + titleParagraph2 + '</p>';\n            };\n            info2.addTo(map2);\n            fetch(\n                geojson_url\n            ).then(\n                res => res.json()\n            ).then(\n                data => addGeoLayer2(data)\n            )\n\n\n            google.charts.load('current', { 'packages': ['corechart'] });\n            google.charts.setOnLoadCallback(drawSeriesChart);\n\n            function drawSeriesChart() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Osasun eremua');\n                    data.addColumn('number', 'Positiboen tasa');\n                    data.addColumn('number', 'Hilgarritasuna');\n                    data.addColumn('number', 'Biztanleak (TISak guztira)');\n                    var options = {\n                        title: 'Euskadiko osasun eremuen positibo (100.000 biztanleko tasa) eta hilgarritasunaren arteko korrelazioa. Hilgarritsaun handiena (>4%) duten osasun eremuak bakarrik erakusten dira.',\n                        hAxis: { title: 'Positiboak (100.000 biztanleko tasa)' },\n                        vAxis: { title: 'Hilgarritasuna' },\n                        bubble: { textStyle: { fontSize: 11 } }\n                    };\n                } else {\n                    data.addColumn('string', 'Zona de salud');\n                    data.addColumn('number', 'Tasa de positivos');\n                    data.addColumn('number', 'Letalidad');\n                    data.addColumn('number', 'Poblacion (Total de TIS)');\n                    var options = {\n                        title: 'Correlación entre positivos (tasa por 100.000 hab.) y letalidad en las zonas de salud de Euskadi. Se muestran tan solo las zonas de salud con mayor letalidad (> 4%).',\n                        hAxis: { title: 'Positivos (tasa por 100.000 hab.)' },\n                        vAxis: { title: 'Letalidad' },\n                        bubble: { textStyle: { fontSize: 11 } }\n                    };\n                }\n                for (let element of dataJson.dataByDateByHealthZone[0].items) {\n                    if (element.mortalityRate > 4) {\n                        data.addRow([element.healthZone.name, element.positiveBy100ThousandPeopleRate, element.mortalityRate, element.tisCount]);\n                    }\n                }\n                var chart = new google.visualization.BubbleChart(document.getElementById('series_chart_div3'));\n                chart.draw(data, options);\n            }\n\n            google.charts.load('current', { 'packages': ['table'] });\n            google.charts.setOnLoadCallback(drawTable);\n            function drawTable() {\n                var data = new google.visualization.DataTable();\n                if (window.location.href.indexOf(\"/eu/\") > -1) {\n                    data.addColumn('string', 'Osasun eremua');\n                    data.addColumn('number', 'TISak guztira');\n                    data.addColumn('number', 'Positiboak');\n                    data.addColumn('number', 'Positiboen tasa 100.000 biz.');\n                    data.addColumn('number', 'Hildakoak');\n                    data.addColumn('number', 'Hilgarritasuna');\n                } else {\n                    data.addColumn('string', 'Zona de salud');\n                    data.addColumn('number', 'Total TIS');\n                    data.addColumn('number', 'Positivos');\n                    data.addColumn('number', 'Tasa de positivos 100.000 hab.');\n                    data.addColumn('number', 'Fallecidos');\n                    data.addColumn('number', 'Letalidad');\n                }\n                for (let element of dataJson.dataByDateByHealthZone[0].items) {\n                    data.addRow([element.healthZone.name, element.tisCount, element.totalPositiveCount, element.positiveBy100ThousandPeopleRate, element.totalDeceasedCount, element.mortalityRate]);\n                }\n                var table = new google.visualization.Table(document.getElementById('table_div10'));\n                table.draw(data, { showRowNumber: true, sortColumn: 2, sortAscending: false, width: '100%', height: 'auto' });\n            }\n        }\n    });\n}"]}