{"version":3,"sources":["js/config.js","js/getData.js","js/by-age.js"],"names":["DATA_SOURCE","DATAFILES","EPIDEMICSTATUS","PCR","DECEASEDPEOPLECOUNT","BYAGE","BYHEALTHZONE","BYMUNICIPALITY","BYHOSPITAL","getJSON","url","callback","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","window","err","dataJson","alert","google","charts","load","setOnLoadCallback","drawSeriesChart","data","visualization","DataTable","addColumn","element","byAgeRange","ageRange","addRow","positiveCount","deceasedCount","population","options","title","hAxis","vAxis","bubble","textStyle","fontSize","chart","BubbleChart","document","getElementById","draw","drawChart","subtitle","bars","Bar","convertOptions","drawTable","positiveByPopulationPercentage","lethalityRate","table","Table","showRowNumber","width","height"],"mappings":";;AEAA;;AACA;;AAEAoB,AFHA,MEGM,AFHApB,CEGCgB,MAAP,GAAgB,CFHC,GAAG,QEGQ,wFFH5B;AEKI,AFHG,ACFA,IAAIP,EDEER,KCFK,GAAG,CDEC,GAAG,MEGbA,ADLmBS,GAAV,EAAeC,QAAf,EAAyB,GCKxBN,KAAlB,EAAyB,UAAUgB,GAAV,EAAeC,QAAf,EAAyB;AAC9C,AFHJpB,ACFA,EDEAA,ICFIU,ECKIS,CDLD,ECKI,CDLD,GCKK,CFHD,ACFAR,EDEG,CEGb,EAAiB,AFHFb,SCFT,EDEqB,ACF/B,+BDCqB;AEKbuB,AFHRpB,ACFAS,EDEAT,ACFAS,GDEG,ACFA,CCKKW,ADLJT,CDEE,GAAEd,ACFR,CCKa,ADLJ,CCKK,IDLd,EAAgBU,GDEI,ACFpB,EAAqB,IAArB,YCKyCW,CFLpB,EEKR,CAAL;AACH,AFHLjB,ACFAQ,EDEAR,ACFAQ,GCGI,ADHD,CAACG,KCKO,ODLX,GDEmB,ACFA,EDEG,GAAEf,CCFxB,UDEoC,mCAHf;AEObwB,AFHRnB,EAAAA,IEGQmB,CFHH,EAAG,GEGM,AFHJxB,CEGKyB,MAAP,CAAcC,GFHA,CEGd,CAAmB,SAAnB,EAA8B,QFPjB;AEOmB,AFFxCpB,ACHAM,EDGAN,ACHAM,GAAG,CAACI,MAAJ,EDGY,CCHC,CDGE,GAAEhB,CEEmC,CAAC,MDL5B,GDGI,EEEuB,0BFP/B;AEOiB,AFDtCO,ACHI,EDGJA,KECQ,CDJAU,MAAM,EDGA,CCHGL,CDGA,ECHG,CDGDZ,ACHEiB,MAAjB,KDG2B,8BANV;AEQbO,AFDRhB,EAAAA,IECQgB,MAAM,AFDJ,CECKC,CFDF,GAAEzB,EECP,CAAc2B,QFDK,SECnB,CAAgCC,eAAhC;AFRa,ACIjB,CDJD,OCIKX,MAAM,IAAI,GAAd,EAAmB;ACMf,ADLAN,MAAAA,QAAQ,CCKCiB,ADLA,IAAD,EAAOhB,GAAG,CAACM,KCKnB,GAA2B,ADLnB,CAAR;ACMI,ADLP,KAFD,MAEO,CCKKW,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;AACAF,ADLJlB,MAAAA,ECKIkB,IAAI,CAACG,CDLD,CAACf,MAAD,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","file":"by-age.7fc1bbdc.js","sourceRoot":"..\\src\\covid19","sourcesContent":["const DATA_SOURCE = 'https://opendata.euskadi.eus/contenidos/ds_informes_estudios/covid_19_2020/opendata/generated/';\n\nexport const DATAFILES = {\n    EPIDEMICSTATUS: `${DATA_SOURCE}/covid19-epidemic-status.json`,\n    PCR: `${DATA_SOURCE}/covid19-pcr.json`,\n    DECEASEDPEOPLECOUNT: `${DATA_SOURCE}/covid19-deceasedPeopleCount.json`,\n    BYAGE: `${DATA_SOURCE}/covid19-byage.json`,\n    BYHEALTHZONE: `${DATA_SOURCE}/covid19-byhealthzone.json`,\n    BYMUNICIPALITY: `${DATA_SOURCE}/covid19-bymunicipality.json`,\n    BYHOSPITAL: `${DATA_SOURCE}/covid19-byhospital.json`,\n};\n","export var getJSON = function (url, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('get', url, true);\r\n    xhr.responseType = 'json';\r\n    xhr.onload = function () {\r\n        var status = xhr.status;\r\n        if (status == 200) {\r\n            callback(null, xhr.response);\r\n        } else {\r\n            callback(status);\r\n        }\r\n    };\r\n    xhr.send();\r\n};","import { DATAFILES } from './config';\r\nimport { getJSON } from './getData.js';\r\n\r\nwindow.onload = function () {\r\n\r\n    getJSON(DATAFILES.BYAGE, function (err, dataJson) {\r\n        if (err != null) {\r\n            alert('Something went wrong: ' + err);\r\n        } else {\r\n            google.charts.load('current', { 'packages': ['corechart'] });\r\n            google.charts.setOnLoadCallback(drawSeriesChart);\r\n\r\n            function drawSeriesChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('string', 'ID');\r\n                data.addColumn('number', 'Positivos');\r\n                data.addColumn('number', 'Fallecidos');\r\n                data.addColumn('number', 'Poblacion');\r\n                for (let element of dataJson.byAgeRange) {\r\n                    if (element.ageRange !== 'No consta') {\r\n                        data.addRow([element.ageRange, element.positiveCount, element.deceasedCount, element.population]);\r\n                    }\r\n                }\r\n                var options = {\r\n                    title: 'Correlación entre el número de positivos y el de fallecidos por rango de edad.',\r\n                    hAxis: { title: 'Positivos' },\r\n                    vAxis: { title: 'Fallecidos' },\r\n                    bubble: { textStyle: { fontSize: 11 } }\r\n                };\r\n\r\n                var chart = new google.visualization.BubbleChart(document.getElementById('series_chart_div'));\r\n                chart.draw(data, options);\r\n            }\r\n            google.charts.load('current', { 'packages': ['bar'] });\r\n            google.charts.setOnLoadCallback(drawChart);\r\n\r\n            function drawChart() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('string', 'Fecha');\r\n                data.addColumn('number', 'Positivos');\r\n                data.addColumn('number', 'Fallecidos');\r\n                for (let element of dataJson.byAgeRange) {\r\n                    if (element.ageRange !== 'No consta') {\r\n                        data.addRow([element.ageRange + ' años', element.positiveCount, element.deceasedCount]);\r\n                    }\r\n                }\r\n                var options = {\r\n                    chart: {\r\n                        title: 'Número de positivos y de fallecidos por rango de edad',\r\n                        subtitle: 'Se muestran los mismos datos representados en otro gráfico.',\r\n                    },\r\n                    bars: 'horizontal' // Required for Material Bar Charts.\r\n                };\r\n\r\n                var chart = new google.charts.Bar(document.getElementById('barchart_material6'));\r\n\r\n                chart.draw(data, google.charts.Bar.convertOptions(options));\r\n            }\r\n\r\n\r\n            google.charts.load('current', { 'packages': ['table'] });\r\n            google.charts.setOnLoadCallback(drawTable);\r\n            function drawTable() {\r\n                var data = new google.visualization.DataTable();\r\n                data.addColumn('string', 'Rango de edad');\r\n                data.addColumn('number', 'Poblacion');\r\n                data.addColumn('number', 'Total de positivos');\r\n                data.addColumn('number', '% de positivos sobre el total de casos');\r\n                data.addColumn('number', 'Total fallecidos');\r\n                data.addColumn('number', 'Letalidad');\r\n\r\n\r\n                for (let element of dataJson.byAgeRange) {\r\n                    if (element.ageRange !== 'No consta') {\r\n                        data.addRow([element.ageRange, element.population, element.positiveCount, element.positiveByPopulationPercentage, element.deceasedCount, element.lethalityRate,]);\r\n                    }\r\n                }\r\n                var table = new google.visualization.Table(document.getElementById('table_div4'));\r\n                table.draw(data, { showRowNumber: true, width: '100%', height: 'auto' });\r\n            }\r\n        }\r\n    });\r\n}"]}